{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\",\n  _s = $RefreshSig$();\n// /home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapZoneBuilder = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  zoneId,\n  onDrawComplete,\n  triggerColor,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n\n  // ✅ Fetch Map Data (Includes Feet-Based Scaling)\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"✅ Map data fetched (ZoneBuilder):\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // 🖌 **Canvas Rendering for Zone Drawing**\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      console.log(\"🖌 Restoring Canvas rendering...\");\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 500;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      img.onload = () => {\n        console.log(\"✅ Canvas: Map image loaded successfully\", mapData.imageUrl);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n      img.onerror = () => {\n        console.error(\"❌ Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n\n      // 🖱 **Canvas Click Handler**\n      const handleMouseDown = e => {\n        if (e.button === 0) {\n          const rect = canvas.getBoundingClientRect();\n          const clickX = e.clientX - rect.left;\n          const clickY = e.clientY - rect.top;\n\n          // ✅ Get Scaling Values from Map Metadata\n          const xMin = mapData.bounds[0][1];\n          const xMax = mapData.bounds[1][1];\n          const yMin = mapData.bounds[0][0];\n          const yMax = mapData.bounds[1][0];\n          const xRange = xMax - xMin;\n          const yRange = yMax - yMin;\n\n          // ✅ Convert Click Position to Feet (Same as Flask)\n          const x = xMin + clickX / canvas.width * xRange;\n          const y = yMax - clickY / canvas.height * yRange;\n          points.current.push({\n            x,\n            y\n          });\n          console.log(\"🖱 Click registered at (feet):\", {\n            x,\n            y\n          });\n          drawPolygon(points.current);\n        }\n      };\n      const drawPolygon = points => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        if (points.length === 0) return;\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        points.forEach(point => ctx.lineTo(point.x, point.y));\n        ctx.closePath();\n        ctx.strokeStyle = triggerColor || \"red\";\n        ctx.stroke();\n      };\n      canvas.addEventListener(\"mousedown\", handleMouseDown);\n      return () => {\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🗺 **Leaflet Rendering for Zones**\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !isInitialized.current) {\n      console.log(\"🗺 Restoring Leaflet rendering...\");\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple\n      }).fitBounds(mapData.bounds);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      mapInstance.current.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: {\n            shapeOptions: {\n              color: triggerColor || \"red\",\n              weight: 2\n            }\n          },\n          rectangle: false,\n          circle: false,\n          polyline: false,\n          marker: false\n        }\n      });\n      mapInstance.current.addControl(drawControl);\n      mapInstance.current.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n\n        // ✅ **Convert Leaflet LatLng to Feet (Matches Flask)**\n        const xMin = mapData.bounds[0][1];\n        const xMax = mapData.bounds[1][1];\n        const yMin = mapData.bounds[0][0];\n        const yMax = mapData.bounds[1][0];\n        const coords = layer.getLatLngs()[0].map((point, index) => {\n          return {\n            n_x: xMin + (point.lng - xMin) * ((xMax - xMin) / 240),\n            // Normalize X\n            n_y: yMax - (point.lat - yMin) * ((yMax - yMin) / 200),\n            // Flip Y-axis\n            n_z: 0,\n            n_ord: index + 1\n          };\n        });\n        console.log(\"🖌 Scaled points (Leaflet, in feet):\", coords);\n        if (onDrawComplete) onDrawComplete(coords);\n      });\n      isInitialized.current = true;\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🧹 Cleanup on Unmount\n  useEffect(() => {\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        isInitialized.current = false;\n      }\n      if (mapData && imageRef.current) {\n        imageRef.current.src = \"\";\n      }\n    };\n  }, [mapData]);\n\n  // **Return UI**\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"600px\",\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"map\",\n      style: {\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}, \"VOii8yGqDDk/+VN+qJzhzoHe67c=\")), \"VOii8yGqDDk/+VN+qJzhzoHe67c=\");\n_c2 = MapZoneBuilder;\nexport default MapZoneBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapZoneBuilder$memo\");\n$RefreshReg$(_c2, \"MapZoneBuilder\");","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","L","jsxDEV","_jsxDEV","MapZoneBuilder","_s","_c","zoneId","onDrawComplete","triggerColor","useLeaflet","mapRef","mapInstance","drawnItems","FeatureGroup","canvasRef","mapData","setMapData","error","setError","isInitialized","points","ctxRef","imageRef","fetchMapData","response","fetch","ok","text","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","width","height","img","Image","crossOrigin","src","imageUrl","onload","drawImage","onerror","handleMouseDown","e","button","rect","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","xMin","bounds","xMax","yMin","yMax","xRange","yRange","x","y","push","drawPolygon","clearRect","length","beginPath","moveTo","forEach","point","lineTo","closePath","strokeStyle","stroke","addEventListener","removeEventListener","map","crs","CRS","Simple","fitBounds","imageOverlay","addTo","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","shapeOptions","color","weight","rectangle","circle","polyline","marker","addControl","on","Event","CREATED","event","layer","coords","getLatLngs","index","n_x","lng","n_y","lat","n_z","n_ord","remove","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","id","_c2","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js"],"sourcesContent":["// /home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; \nimport \"leaflet-draw/dist/leaflet.draw.css\"; \nimport \"leaflet-draw\"; \nimport \"./Map.css\"; \n\nconst MapZoneBuilder = memo(({ zoneId, onDrawComplete, triggerColor, useLeaflet }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n\n  // ✅ Fetch Map Data (Includes Feet-Based Scaling)\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"✅ Map data fetched (ZoneBuilder):\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // 🖌 **Canvas Rendering for Zone Drawing**\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      console.log(\"🖌 Restoring Canvas rendering...\");\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n\n      canvas.width = 600;\n      canvas.height = 500;\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n\n      img.onload = () => {\n        console.log(\"✅ Canvas: Map image loaded successfully\", mapData.imageUrl);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n\n      img.onerror = () => {\n        console.error(\"❌ Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n\n      // 🖱 **Canvas Click Handler**\n      const handleMouseDown = (e) => {\n        if (e.button === 0) {\n          const rect = canvas.getBoundingClientRect();\n          const clickX = e.clientX - rect.left;\n          const clickY = e.clientY - rect.top;\n\n          // ✅ Get Scaling Values from Map Metadata\n          const xMin = mapData.bounds[0][1];\n          const xMax = mapData.bounds[1][1];\n          const yMin = mapData.bounds[0][0];\n          const yMax = mapData.bounds[1][0];\n\n          const xRange = xMax - xMin;\n          const yRange = yMax - yMin;\n\n          // ✅ Convert Click Position to Feet (Same as Flask)\n          const x = xMin + ((clickX / canvas.width) * xRange);\n          const y = yMax - ((clickY / canvas.height) * yRange);\n\n          points.current.push({ x, y });\n          console.log(\"🖱 Click registered at (feet):\", { x, y });\n\n          drawPolygon(points.current);\n        }\n      };\n\n      const drawPolygon = (points) => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        if (points.length === 0) return;\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        points.forEach((point) => ctx.lineTo(point.x, point.y));\n        ctx.closePath();\n        ctx.strokeStyle = triggerColor || \"red\";\n        ctx.stroke();\n      };\n\n      canvas.addEventListener(\"mousedown\", handleMouseDown);\n      return () => {\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🗺 **Leaflet Rendering for Zones**\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !isInitialized.current) {\n      console.log(\"🗺 Restoring Leaflet rendering...\");\n\n      mapInstance.current = L.map(mapRef.current, { crs: L.CRS.Simple })\n        .fitBounds(mapData.bounds);\n      \n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      mapInstance.current.addLayer(drawnItems.current);\n\n      const drawControl = new L.Control.Draw({\n        edit: { featureGroup: drawnItems.current },\n        draw: { \n          polygon: { shapeOptions: { color: triggerColor || \"red\", weight: 2 } },\n          rectangle: false,\n          circle: false,\n          polyline: false,\n          marker: false,\n        },\n      });\n      mapInstance.current.addControl(drawControl);\n\n      mapInstance.current.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n\n        // ✅ **Convert Leaflet LatLng to Feet (Matches Flask)**\n        const xMin = mapData.bounds[0][1];\n        const xMax = mapData.bounds[1][1];\n        const yMin = mapData.bounds[0][0];\n        const yMax = mapData.bounds[1][0];\n\n        const coords = layer.getLatLngs()[0].map((point, index) => {\n          return {\n            n_x: xMin + ((point.lng - xMin) * ((xMax - xMin) / 240)), // Normalize X\n            n_y: yMax - ((point.lat - yMin) * ((yMax - yMin) / 200)), // Flip Y-axis\n            n_z: 0,\n            n_ord: index + 1\n          };\n        });\n\n        console.log(\"🖌 Scaled points (Leaflet, in feet):\", coords);\n        if (onDrawComplete) onDrawComplete(coords);\n      });\n\n      isInitialized.current = true;\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🧹 Cleanup on Unmount\n  useEffect(() => {\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        isInitialized.current = false;\n      }\n      if (mapData && imageRef.current) {\n        imageRef.current.src = \"\"; \n      }\n    };\n  }, [mapData]);\n\n  // **Return UI**\n  return (\n    <div>\n      {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n      {useLeaflet ? (\n        <div ref={mapRef} style={{ height: \"500px\", width: \"600px\", border: \"2px solid black\" }} />\n      ) : (\n        <canvas ref={canvasRef} id=\"map\" style={{ border: \"2px solid black\" }} />\n      )}\n    </div>\n  );\n});\n\nexport default MapZoneBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}