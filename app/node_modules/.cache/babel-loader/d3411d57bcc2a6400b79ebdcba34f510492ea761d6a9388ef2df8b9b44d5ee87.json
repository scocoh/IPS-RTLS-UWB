{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/TriggerDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport Map from \"./components/Map\";\nimport \"./TriggerDemo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TriggerDemo = () => {\n  _s();\n  const [maps, setMaps] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [triggerDirections, setTriggerDirections] = useState([]);\n  const [selectedZone, setSelectedZone] = useState(null);\n  const [triggerName, setTriggerName] = useState(\"\");\n  const [triggerDirection, setTriggerDirection] = useState(\"\");\n  const [topElevation, setTopElevation] = useState(8);\n  const [bottomElevation, setBottomElevation] = useState(-1);\n  const [triggerColor, setTriggerColor] = useState(\"Red\");\n  const [eventList, setEventList] = useState([]);\n  const [coordinates, setCoordinates] = useState(\"\");\n  const [parentZones, setParentZones] = useState([]);\n  const [selectedParentZone, setSelectedParentZone] = useState(\"\");\n  const [vertices, setVertices] = useState([]);\n  const [editedVertices, setEditedVertices] = useState({});\n  const [loading, setLoading] = useState({\n    maps: false,\n    parentZones: false,\n    triggerDirections: false,\n    zones: false,\n    vertices: false\n  });\n  const [error, setError] = useState(null);\n  const [showMapForDrawing, setShowMapForDrawing] = useState(false);\n\n  // Fetch data helper\n  const fetchData = async (url, setter, key, transform = data => data) => {\n    setLoading(prev => ({\n      ...prev,\n      [key]: true\n    }));\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      const data = await response.json();\n      console.log(`${key} data:`, data);\n      setter(transform(data));\n      setError(null);\n    } catch (error) {\n      console.error(`Error fetching ${key}:`, error);\n      setError(`Error fetching ${key}: ${error.message}`);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        [key]: false\n      }));\n    }\n  };\n\n  // Fetch initial data\n  useEffect(() => {\n    fetchData(\"/maps/get_maps\", setMaps, \"maps\");\n    fetchData(\"/api/get_parent_zones\", setParentZones, \"parentZones\", data => data.zones);\n    fetchData(\"/api/list_trigger_directions\", setTriggerDirections, \"triggerDirections\");\n  }, []);\n\n  // Flatten zones hierarchy\n  const flattenZones = zones => {\n    const result = [];\n    const flatten = zone => {\n      result.push(zone);\n      if (zone.children && zone.children.length > 0) {\n        zone.children.forEach(child => flatten(child));\n      }\n    };\n    zones.forEach(zone => flatten(zone));\n    return result;\n  };\n\n  // Update zones when a parent zone is selected\n  useEffect(() => {\n    if (selectedParentZone) {\n      const zoneId = parseInt(selectedParentZone);\n      fetchData(`/maps/get_campus_zones/${zoneId}`, data => {\n        const flattenedZones = flattenZones(data.zones || []);\n        setZones(flattenedZones);\n      }, \"zones\");\n    }\n  }, [selectedParentZone]);\n\n  // Memoized handleCreateTrigger to prevent unnecessary re-renders\n  const handleCreateTrigger = useCallback(async () => {\n    if (!triggerName || !selectedZone || !triggerDirection) {\n      alert(\"Please fill all required fields (Trigger Name, Zone, Direction).\");\n      return;\n    }\n    if (!showMapForDrawing) {\n      setShowMapForDrawing(true);\n      return;\n    }\n    if (!coordinates) {\n      alert(\"Please draw the trigger on the map.\");\n      return;\n    }\n\n    // Find the direction ID (i_dir) from the selected direction string\n    const selectedDirectionObj = triggerDirections.find(dir => dir.x_dir === triggerDirection);\n    const directionId = selectedDirectionObj ? selectedDirectionObj.i_dir : null;\n    if (!directionId) {\n      alert(\"Invalid direction selected.\");\n      return;\n    }\n    const triggerData = {\n      name: triggerName,\n      direction: directionId,\n      zoneId: parseInt(selectedZone),\n      // Changed to zoneId to match potential backend expectation\n      top_elevation: topElevation,\n      bottom_elevation: bottomElevation,\n      color: triggerColor,\n      coordinates: JSON.parse(coordinates).map(coord => ({\n        n_x: coord[0],\n        n_y: coord[1],\n        n_z: 0\n      })),\n      ignore: true\n    };\n    try {\n      const response = await fetch(\"/api/add_trigger\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(triggerData)\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      const result = await response.json();\n      alert(`Trigger created with ID: ${result.trigger_id}`);\n      setEventList([...eventList, `${triggerName} created at ${coordinates} with ${triggerDirection} direction`]);\n      setCoordinates(\"\");\n      setShowMapForDrawing(false);\n    } catch (error) {\n      console.error(\"Error creating trigger:\", error);\n      alert(`Error creating trigger: ${error.message}`);\n    }\n  }, [triggerName, selectedZone, triggerDirection, topElevation, bottomElevation, triggerColor, coordinates, showMapForDrawing, triggerDirections]);\n\n  // Load vertices for selected zones\n  const loadVerticesForSelectedZones = async () => {\n    const checkedZones = Array.from(document.querySelectorAll(\"#zoneList input[type='checkbox']:checked\")).map(cb => parseInt(cb.value)).filter(id => !isNaN(id));\n    if (checkedZones.length === 0) {\n      alert(\"Please select at least one zone to load vertices.\");\n      return;\n    }\n    setLoading(prev => ({\n      ...prev,\n      vertices: true\n    }));\n    try {\n      const vertexPromises = checkedZones.map(zoneId => fetch(`/api/get_zone_vertices/${zoneId}`).then(response => {\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        return response.json();\n      }).then(data => data.vertices || []));\n      const allVertices = (await Promise.all(vertexPromises)).flat();\n      if (allVertices.length === 0) {\n        throw new Error(\"No vertices found for selected zones.\");\n      }\n      console.log(\"Loaded vertices:\", allVertices);\n      setVertices(allVertices);\n      setEditedVertices(allVertices.reduce((acc, v) => ({\n        ...acc,\n        [v.i_vtx]: v\n      }), {}));\n    } catch (error) {\n      console.error(\"Error loading vertices:\", error);\n      alert(`Error loading vertices: ${error.message}`);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        vertices: false\n      }));\n    }\n  };\n\n  // Handle vertex changes\n  const handleVertexChange = (vertexId, field, value) => {\n    setEditedVertices(prev => ({\n      ...prev,\n      [vertexId]: {\n        ...prev[vertexId],\n        [field]: parseFloat(value) || 0\n      }\n    }));\n  };\n\n  // Save all edited vertices\n  const saveAllVertices = async () => {\n    const updatedVertices = Object.values(editedVertices).map(v => ({\n      vertex_id: v.i_vtx,\n      x: v.x,\n      y: v.y,\n      z: v.z || 0\n    }));\n    if (updatedVertices.length === 0) {\n      alert(\"No vertices to save.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"/api/update_vertices\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          vertices: updatedVertices\n        })\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      alert(\"Vertices updated successfully!\");\n      if (selectedZone) {\n        fetchData(`/api/get_zone_vertices/${selectedZone}`, setVertices, \"vertices\", data => data.vertices || []);\n      }\n    } catch (error) {\n      console.error(\"Error saving vertices:\", error);\n      alert(`Error saving vertices: ${error.message}`);\n    }\n  };\n\n  // Use useMemo to ensure consistent rendering of direction options\n  const directionOptions = useMemo(() => {\n    return triggerDirections.map(direction => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: direction.x_dir,\n      children: direction.x_dir\n    }, direction.i_dir, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this));\n  }, [triggerDirections]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ParcoRTLS Trigger Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"mapAndTrigger\",\n      id: \"trigger-demo-tabs\",\n      children: /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"mapAndTrigger\",\n        title: \"Map & Trigger\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trigger-map-section\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trigger-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create Trigger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Trigger Name\",\n              value: triggerName,\n              onChange: e => setTriggerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedParentZone,\n              onChange: e => setSelectedParentZone(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Parent Zone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), loading.parentZones ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this) : parentZones.map(pz => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pz.zone_id.toString(),\n                children: pz.name\n              }, pz.zone_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: triggerDirection,\n              onChange: e => setTriggerDirection(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), loading.triggerDirections ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this) : directionOptions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Top Elevation (Zmax)\",\n              value: topElevation,\n              onChange: e => setTopElevation(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Bottom Elevation (Zmin)\",\n              value: bottomElevation,\n              onChange: e => setBottomElevation(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: triggerColor,\n              onChange: e => setTriggerColor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Red\",\n                children: \"Red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Blue\",\n                children: \"Blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Green\",\n                children: \"Green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateTrigger,\n              children: showMapForDrawing ? \"Save Trigger\" : \"Create Trigger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-selection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select a Zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"zoneList\",\n              children: loading.zones ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading zones...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this) : zones.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No zones available for this parent zone.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this) : zones.map(zone => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: zone.zone_id.toString(),\n                  checked: selectedZone === zone.zone_id.toString(),\n                  onChange: e => setSelectedZone(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: zone.zone_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this)]\n              }, zone.zone_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), showMapForDrawing && /*#__PURE__*/_jsxDEV(Map, {\n              // Force remount when zone changes\n              zoneId: parseInt(selectedZone),\n              onDrawComplete: setCoordinates\n            }, selectedZone, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Trigger Vertices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"vertexTable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Vertex #\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"X Coordinate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Y Coordinate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Z Coordinate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.values(editedVertices).map((v, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: v.x || 0,\n                    onChange: e => handleVertexChange(v.i_vtx, \"x\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: v.y || 0,\n                    onChange: e => handleVertexChange(v.i_vtx, \"y\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: v.z || 0,\n                    onChange: e => handleVertexChange(v.i_vtx, \"z\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 21\n                }, this)]\n              }, v.i_vtx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: loadVerticesForSelectedZones,\n            disabled: loading.vertices,\n            children: loading.vertices ? \"Loading...\" : \"Load Vertices for Selected Zones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveAllVertices,\n            disabled: loading.vertices,\n            children: loading.vertices ? \"Saving...\" : \"Save All Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(TriggerDemo, \"HsmMfh896u9J4L3UugHzX3//kCU=\");\n_c = TriggerDemo;\nexport default TriggerDemo;\nvar _c;\n$RefreshReg$(_c, \"TriggerDemo\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Tabs","Tab","Map","jsxDEV","_jsxDEV","TriggerDemo","_s","maps","setMaps","zones","setZones","triggerDirections","setTriggerDirections","selectedZone","setSelectedZone","triggerName","setTriggerName","triggerDirection","setTriggerDirection","topElevation","setTopElevation","bottomElevation","setBottomElevation","triggerColor","setTriggerColor","eventList","setEventList","coordinates","setCoordinates","parentZones","setParentZones","selectedParentZone","setSelectedParentZone","vertices","setVertices","editedVertices","setEditedVertices","loading","setLoading","error","setError","showMapForDrawing","setShowMapForDrawing","fetchData","url","setter","key","transform","data","prev","response","fetch","ok","text","Error","status","json","console","log","message","flattenZones","result","flatten","zone","push","children","length","forEach","child","zoneId","parseInt","flattenedZones","handleCreateTrigger","alert","selectedDirectionObj","find","dir","x_dir","directionId","i_dir","triggerData","name","direction","top_elevation","bottom_elevation","color","JSON","parse","map","coord","n_x","n_y","n_z","ignore","method","headers","body","stringify","trigger_id","loadVerticesForSelectedZones","checkedZones","Array","from","document","querySelectorAll","cb","value","filter","id","isNaN","vertexPromises","then","allVertices","Promise","all","flat","reduce","acc","v","i_vtx","handleVertexChange","vertexId","field","parseFloat","saveAllVertices","updatedVertices","Object","values","vertex_id","x","y","z","directionOptions","fileName","_jsxFileName","lineNumber","columnNumber","defaultActiveKey","eventKey","title","className","style","type","placeholder","onChange","e","target","pz","zone_id","toString","Number","onClick","checked","zone_name","onDrawComplete","i","disabled","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/TriggerDemo.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport Map from \"./components/Map\";\nimport \"./TriggerDemo.css\";\n\nconst TriggerDemo = () => {\n  const [maps, setMaps] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [triggerDirections, setTriggerDirections] = useState([]);\n  const [selectedZone, setSelectedZone] = useState(null);\n  const [triggerName, setTriggerName] = useState(\"\");\n  const [triggerDirection, setTriggerDirection] = useState(\"\");\n  const [topElevation, setTopElevation] = useState(8);\n  const [bottomElevation, setBottomElevation] = useState(-1);\n  const [triggerColor, setTriggerColor] = useState(\"Red\");\n  const [eventList, setEventList] = useState([]);\n  const [coordinates, setCoordinates] = useState(\"\");\n  const [parentZones, setParentZones] = useState([]);\n  const [selectedParentZone, setSelectedParentZone] = useState(\"\");\n  const [vertices, setVertices] = useState([]);\n  const [editedVertices, setEditedVertices] = useState({});\n  const [loading, setLoading] = useState({\n    maps: false,\n    parentZones: false,\n    triggerDirections: false,\n    zones: false,\n    vertices: false,\n  });\n  const [error, setError] = useState(null);\n  const [showMapForDrawing, setShowMapForDrawing] = useState(false);\n\n  // Fetch data helper\n  const fetchData = async (url, setter, key, transform = (data) => data) => {\n    setLoading((prev) => ({ ...prev, [key]: true }));\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      const data = await response.json();\n      console.log(`${key} data:`, data);\n      setter(transform(data));\n      setError(null);\n    } catch (error) {\n      console.error(`Error fetching ${key}:`, error);\n      setError(`Error fetching ${key}: ${error.message}`);\n    } finally {\n      setLoading((prev) => ({ ...prev, [key]: false }));\n    }\n  };\n\n  // Fetch initial data\n  useEffect(() => {\n    fetchData(\"/maps/get_maps\", setMaps, \"maps\");\n    fetchData(\"/api/get_parent_zones\", setParentZones, \"parentZones\", (data) => data.zones);\n    fetchData(\"/api/list_trigger_directions\", setTriggerDirections, \"triggerDirections\");\n  }, []);\n\n  // Flatten zones hierarchy\n  const flattenZones = (zones) => {\n    const result = [];\n    const flatten = (zone) => {\n      result.push(zone);\n      if (zone.children && zone.children.length > 0) {\n        zone.children.forEach(child => flatten(child));\n      }\n    };\n    zones.forEach(zone => flatten(zone));\n    return result;\n  };\n\n  // Update zones when a parent zone is selected\n  useEffect(() => {\n    if (selectedParentZone) {\n      const zoneId = parseInt(selectedParentZone);\n      fetchData(`/maps/get_campus_zones/${zoneId}`, (data) => {\n        const flattenedZones = flattenZones(data.zones || []);\n        setZones(flattenedZones);\n      }, \"zones\");\n    }\n  }, [selectedParentZone]);\n\n  // Memoized handleCreateTrigger to prevent unnecessary re-renders\n  const handleCreateTrigger = useCallback(async () => {\n    if (!triggerName || !selectedZone || !triggerDirection) {\n      alert(\"Please fill all required fields (Trigger Name, Zone, Direction).\");\n      return;\n    }\n\n    if (!showMapForDrawing) {\n      setShowMapForDrawing(true);\n      return;\n    }\n\n    if (!coordinates) {\n      alert(\"Please draw the trigger on the map.\");\n      return;\n    }\n\n    // Find the direction ID (i_dir) from the selected direction string\n    const selectedDirectionObj = triggerDirections.find(dir => dir.x_dir === triggerDirection);\n    const directionId = selectedDirectionObj ? selectedDirectionObj.i_dir : null;\n\n    if (!directionId) {\n      alert(\"Invalid direction selected.\");\n      return;\n    }\n\n    const triggerData = {\n      name: triggerName,\n      direction: directionId,\n      zoneId: parseInt(selectedZone), // Changed to zoneId to match potential backend expectation\n      top_elevation: topElevation,\n      bottom_elevation: bottomElevation,\n      color: triggerColor,\n      coordinates: JSON.parse(coordinates).map(coord => ({ n_x: coord[0], n_y: coord[1], n_z: 0 })),\n      ignore: true,\n    };\n\n    try {\n      const response = await fetch(\"/api/add_trigger\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(triggerData),\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      const result = await response.json();\n      alert(`Trigger created with ID: ${result.trigger_id}`);\n      setEventList([...eventList, `${triggerName} created at ${coordinates} with ${triggerDirection} direction`]);\n      setCoordinates(\"\");\n      setShowMapForDrawing(false);\n    } catch (error) {\n      console.error(\"Error creating trigger:\", error);\n      alert(`Error creating trigger: ${error.message}`);\n    }\n  }, [triggerName, selectedZone, triggerDirection, topElevation, bottomElevation, triggerColor, coordinates, showMapForDrawing, triggerDirections]);\n\n  // Load vertices for selected zones\n  const loadVerticesForSelectedZones = async () => {\n    const checkedZones = Array.from(document.querySelectorAll(\"#zoneList input[type='checkbox']:checked\"))\n      .map(cb => parseInt(cb.value))\n      .filter(id => !isNaN(id));\n    if (checkedZones.length === 0) {\n      alert(\"Please select at least one zone to load vertices.\");\n      return;\n    }\n\n    setLoading((prev) => ({ ...prev, vertices: true }));\n    try {\n      const vertexPromises = checkedZones.map(zoneId =>\n        fetch(`/api/get_zone_vertices/${zoneId}`)\n          .then(response => {\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n            return response.json();\n          })\n          .then(data => data.vertices || [])\n      );\n      const allVertices = (await Promise.all(vertexPromises)).flat();\n      if (allVertices.length === 0) {\n        throw new Error(\"No vertices found for selected zones.\");\n      }\n      console.log(\"Loaded vertices:\", allVertices);\n      setVertices(allVertices);\n      setEditedVertices(allVertices.reduce((acc, v) => ({ ...acc, [v.i_vtx]: v }), {}));\n    } catch (error) {\n      console.error(\"Error loading vertices:\", error);\n      alert(`Error loading vertices: ${error.message}`);\n    } finally {\n      setLoading((prev) => ({ ...prev, vertices: false }));\n    }\n  };\n\n  // Handle vertex changes\n  const handleVertexChange = (vertexId, field, value) => {\n    setEditedVertices(prev => ({\n      ...prev,\n      [vertexId]: { ...prev[vertexId], [field]: parseFloat(value) || 0 }\n    }));\n  };\n\n  // Save all edited vertices\n  const saveAllVertices = async () => {\n    const updatedVertices = Object.values(editedVertices).map(v => ({\n      vertex_id: v.i_vtx,\n      x: v.x,\n      y: v.y,\n      z: v.z || 0\n    }));\n    if (updatedVertices.length === 0) {\n      alert(\"No vertices to save.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/api/update_vertices\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ vertices: updatedVertices }),\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n      }\n      alert(\"Vertices updated successfully!\");\n      if (selectedZone) {\n        fetchData(`/api/get_zone_vertices/${selectedZone}`, setVertices, \"vertices\", (data) => data.vertices || []);\n      }\n    } catch (error) {\n      console.error(\"Error saving vertices:\", error);\n      alert(`Error saving vertices: ${error.message}`);\n    }\n  };\n\n  // Use useMemo to ensure consistent rendering of direction options\n  const directionOptions = useMemo(() => {\n    return triggerDirections.map((direction) => (\n      <option key={direction.i_dir} value={direction.x_dir}>\n        {direction.x_dir}\n      </option>\n    ));\n  }, [triggerDirections]);\n\n  return (\n    <div>\n      <h1>ParcoRTLS Trigger Management</h1>\n      <Tabs defaultActiveKey=\"mapAndTrigger\" id=\"trigger-demo-tabs\">\n        <Tab eventKey=\"mapAndTrigger\" title=\"Map & Trigger\">\n          <div className=\"trigger-map-section\">\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\n            <div className=\"trigger-form\">\n              <h3>Create Trigger</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Trigger Name\"\n                value={triggerName}\n                onChange={(e) => setTriggerName(e.target.value)}\n              />\n              <select value={selectedParentZone} onChange={(e) => setSelectedParentZone(e.target.value)}>\n                <option value=\"\">Select Parent Zone</option>\n                {loading.parentZones ? (\n                  <option value=\"\">Loading...</option>\n                ) : (\n                  parentZones.map((pz) => (\n                    <option key={pz.zone_id} value={pz.zone_id.toString()}>\n                      {pz.name}\n                    </option>\n                  ))\n                )}\n              </select>\n              <select value={triggerDirection} onChange={(e) => setTriggerDirection(e.target.value)}>\n                <option value=\"\">Select Direction</option>\n                {loading.triggerDirections ? (\n                  <option value=\"\">Loading...</option>\n                ) : (\n                  directionOptions\n                )}\n              </select>\n              <input\n                type=\"number\"\n                placeholder=\"Top Elevation (Zmax)\"\n                value={topElevation}\n                onChange={(e) => setTopElevation(Number(e.target.value))}\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Bottom Elevation (Zmin)\"\n                value={bottomElevation}\n                onChange={(e) => setBottomElevation(Number(e.target.value))}\n              />\n              <select value={triggerColor} onChange={(e) => setTriggerColor(e.target.value)}>\n                <option value=\"Red\">Red</option>\n                <option value=\"Blue\">Blue</option>\n                <option value=\"Green\">Green</option>\n              </select>\n              <button onClick={handleCreateTrigger}>\n                {showMapForDrawing ? \"Save Trigger\" : \"Create Trigger\"}\n              </button>\n            </div>\n            <div className=\"map-selection\">\n              <h3>Select a Zone</h3>\n              <div id=\"zoneList\">\n                {loading.zones ? (\n                  <p>Loading zones...</p>\n                ) : zones.length === 0 ? (\n                  <p>No zones available for this parent zone.</p>\n                ) : (\n                  zones.map((zone) => (\n                    <div key={zone.zone_id}>\n                      <input\n                        type=\"checkbox\"\n                        value={zone.zone_id.toString()}\n                        checked={selectedZone === zone.zone_id.toString()}\n                        onChange={(e) => setSelectedZone(e.target.value)}\n                      />\n                      <span>{zone.zone_name}</span>\n                    </div>\n                  ))\n                )}\n              </div>\n              {showMapForDrawing && (\n                <Map\n                  key={selectedZone} // Force remount when zone changes\n                  zoneId={parseInt(selectedZone)}\n                  onDrawComplete={setCoordinates}\n                />\n              )}\n            </div>\n            <h3>Edit Trigger Vertices</h3>\n            <table id=\"vertexTable\">\n              <thead>\n                <tr>\n                  <th>Vertex #</th>\n                  <th>X Coordinate</th>\n                  <th>Y Coordinate</th>\n                  <th>Z Coordinate</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.values(editedVertices).map((v, i) => (\n                  <tr key={v.i_vtx}>\n                    <td>{i + 1}</td>\n                    <td><input type=\"number\" value={v.x || 0} onChange={(e) => handleVertexChange(v.i_vtx, \"x\", e.target.value)} /></td>\n                    <td><input type=\"number\" value={v.y || 0} onChange={(e) => handleVertexChange(v.i_vtx, \"y\", e.target.value)} /></td>\n                    <td><input type=\"number\" value={v.z || 0} onChange={(e) => handleVertexChange(v.i_vtx, \"z\", e.target.value)} /></td>\n                    <td><button>Save</button></td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button onClick={loadVerticesForSelectedZones} disabled={loading.vertices}>\n              {loading.vertices ? \"Loading...\" : \"Load Vertices for Selected Zones\"}\n            </button>\n            <button onClick={saveAllVertices} disabled={loading.vertices}>\n              {loading.vertices ? \"Saving...\" : \"Save All Changes\"}\n            </button>\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default TriggerDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}