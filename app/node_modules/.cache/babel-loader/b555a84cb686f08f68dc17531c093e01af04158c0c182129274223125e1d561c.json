{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/BuildOutTool.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/BuildOutTool.js 0P.10B.01\n// # Â \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useState, useEffect } from \"react\";\nimport MapBuildOut from \"./MapBuildOut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuildOutTool = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [deviceTypes, setDeviceTypes] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [zoneTypes, setZoneTypes] = useState([]);\n  const [maps, setMaps] = useState([]);\n  const [deviceId, setDeviceId] = useState(\"\");\n  const [deviceName, setDeviceName] = useState(\"\");\n  const [deviceType, setDeviceType] = useState(\"\");\n  const [zoneType, setZoneType] = useState(\"\");\n  const [selectedZone, setSelectedZone] = useState(\"\");\n  const [location, setLocation] = useState({\n    x: null,\n    y: null,\n    z: 0\n  });\n  const [useLeaflet, setUseLeaflet] = useState(false);\n  const [editingDevice, setEditingDevice] = useState(null);\n  const [newDeviceType, setNewDeviceType] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const devicesRes = await fetch(\"/api/get_all_devices\");\n        const devicesData = await devicesRes.json();\n        setDevices(devicesData);\n        const typesRes = await fetch(\"/api/list_device_types\");\n        const typesData = await typesRes.json();\n        setDeviceTypes(typesData);\n        const zonesRes = await fetch(\"/api/zones_with_maps\"); // New endpoint\n        const zonesData = await zonesRes.json();\n        console.log(\"Raw zones response:\", zonesData);\n        const zonesArray = Array.isArray(zonesData) ? zonesData : zonesData.zones || [];\n        setZones(zonesArray);\n        const zoneTypesRes = await fetch(\"/zonebuilder/get_zone_types\");\n        const zoneTypesData = await zoneTypesRes.json();\n        setZoneTypes(zoneTypesData || []);\n        const mapsRes = await fetch(\"/zonebuilder/get_maps\");\n        const mapsData = await mapsRes.json();\n        setMaps(mapsData.maps || []);\n      } catch (err) {\n        console.error(\"Error fetching initial data:\", err);\n        setZones([]);\n        setZoneTypes([]);\n      }\n    };\n    fetchData();\n  }, []);\n  const filteredZones = zones.filter(z => !zoneType || z.i_typ_zn === parseInt(zoneType));\n  const selectedZoneData = zones.find(z => z.i_zn === parseInt(selectedZone));\n  const mapId = selectedZoneData ? selectedZoneData.i_map : null;\n  const handleAddDevice = async () => {\n    if (!deviceId || !deviceType) {\n      alert(\"Please provide a Device ID and select a Device Type.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"device_id\", deviceId);\n    formData.append(\"device_type\", deviceType);\n    formData.append(\"device_name\", deviceName || \"New Device\");\n    if (location.x !== null) formData.append(\"n_moe_x\", location.x);\n    if (location.y !== null) formData.append(\"n_moe_y\", location.y);\n    formData.append(\"n_moe_z\", location.z);\n    try {\n      const res = await fetch(\"/api/add_device\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setDevices([...devices, {\n          x_id_dev: deviceId,\n          i_typ_dev: parseInt(deviceType),\n          x_nm_dev: deviceName || \"New Device\",\n          n_moe_x: location.x,\n          n_moe_y: location.y,\n          n_moe_z: location.z\n        }]);\n        resetForm();\n      } else {\n        alert(`Error: ${result.detail || \"Failed to add device\"}`);\n      }\n    } catch (err) {\n      console.error(\"Error adding device:\", err);\n      alert(\"Error: Failed to connect to server\");\n    }\n  };\n  const handleEditDevice = async () => {\n    const formData = new FormData();\n    formData.append(\"device_name\", deviceName);\n    if (location.x !== null) formData.append(\"n_moe_x\", location.x);\n    if (location.y !== null) formData.append(\"n_moe_y\", location.y);\n    formData.append(\"n_moe_z\", location.z);\n    try {\n      const res = await fetch(`/api/edit_device/${editingDevice.x_id_dev}`, {\n        method: \"PUT\",\n        body: formData\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setDevices(devices.map(d => d.x_id_dev === editingDevice.x_id_dev ? {\n          ...d,\n          x_nm_dev: deviceName,\n          n_moe_x: location.x,\n          n_moe_y: location.y,\n          n_moe_z: location.z\n        } : d));\n        resetForm();\n      } else {\n        alert(`Error: ${result.detail}`);\n      }\n    } catch (err) {\n      console.error(\"Error editing device:\", err);\n    }\n  };\n  const handleDeleteDevice = async deviceId => {\n    try {\n      const res = await fetch(`/api/delete_device/${deviceId}`, {\n        method: \"DELETE\"\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setDevices(devices.filter(d => d.x_id_dev !== deviceId));\n      } else {\n        alert(`Error: ${result.detail}`);\n      }\n    } catch (err) {\n      console.error(\"Error deleting device:\", err);\n    }\n  };\n  const handleAddDeviceType = async () => {\n    try {\n      const res = await fetch(\"/api/add_device_type\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: newDeviceType\n        })\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setDeviceTypes([...deviceTypes, {\n          i_typ_dev: result.type_id,\n          x_dsc_dev: newDeviceType\n        }]);\n        setNewDeviceType(\"\");\n      } else {\n        alert(`Error: ${result.detail}`);\n      }\n    } catch (err) {\n      console.error(\"Error adding device type:\", err);\n    }\n  };\n  const handleDeleteDeviceType = async typeId => {\n    try {\n      const res = await fetch(`/api/delete_device_type/${typeId}`, {\n        method: \"DELETE\"\n      });\n      const result = await res.json();\n      if (res.ok) {\n        setDeviceTypes(deviceTypes.filter(t => t.i_typ_dev !== typeId));\n      } else {\n        alert(`Error: ${result.detail}`);\n      }\n    } catch (err) {\n      console.error(\"Error deleting device type:\", err);\n    }\n  };\n  const resetForm = () => {\n    setDeviceId(\"\");\n    setDeviceName(\"\");\n    setDeviceType(\"\");\n    setZoneType(\"\");\n    setSelectedZone(\"\");\n    setLocation({\n      x: null,\n      y: null,\n      z: 0\n    });\n    setEditingDevice(null);\n  };\n  const handleMapClick = coords => {\n    setLocation({\n      x: coords.n_x,\n      y: coords.n_y,\n      z: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build Out Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add/Edit Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Zone Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: zoneType,\n        onChange: e => setZoneType(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Zone Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), zoneTypes.map(zt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: zt.zone_level,\n          children: zt.zone_name\n        }, zt.zone_level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Zone/Map: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedZone,\n        onChange: e => setSelectedZone(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), filteredZones.map(z => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: z.i_zn,\n          children: z.x_nm_zn\n        }, z.i_zn, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Use Leaflet: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: useLeaflet,\n        onChange: e => setUseLeaflet(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Device ID/Serial: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: deviceId,\n        onChange: e => setDeviceId(e.target.value),\n        disabled: editingDevice !== null,\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: deviceName,\n        onChange: e => setDeviceName(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: deviceType,\n        onChange: e => setDeviceType(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), deviceTypes.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.i_typ_dev,\n          children: t.x_dsc_dev\n        }, t.i_typ_dev, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"X: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: location.x || \"\",\n        onChange: e => setLocation({\n          ...location,\n          x: parseFloat(e.target.value) || null\n        }),\n        style: {\n          width: \"60px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Y: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: location.y || \"\",\n        onChange: e => setLocation({\n          ...location,\n          y: parseFloat(e.target.value) || null\n        }),\n        style: {\n          width: \"60px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Z: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: location.z,\n        onChange: e => setLocation({\n          ...location,\n          z: parseFloat(e.target.value) || 0\n        }),\n        style: {\n          width: \"60px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editingDevice ? handleEditDevice : handleAddDevice,\n        style: {\n          padding: \"5px 10px\"\n        },\n        children: editingDevice ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), editingDevice && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        style: {\n          padding: \"5px 10px\",\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), mapId && /*#__PURE__*/_jsxDEV(MapBuildOut, {\n        zoneId: mapId,\n        onDrawComplete: handleMapClick,\n        devices: devices,\n        useLeaflet: useLeaflet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Device Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newDeviceType,\n        onChange: e => setNewDeviceType(e.target.value),\n        placeholder: \"New Device Type\",\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddDeviceType,\n        style: {\n          padding: \"5px 10px\"\n        },\n        children: \"Add Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: deviceTypes.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [t.x_dsc_dev, \" (ID: \", t.i_typ_dev, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteDeviceType(t.i_typ_dev),\n            style: {\n              marginLeft: \"10px\",\n              padding: \"5px\"\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, t.i_typ_dev, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: devices.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [d.x_id_dev, \" - \", d.x_nm_dev, \" (Type: \", d.i_typ_dev, \", Loc: \", d.n_moe_x || \"N/A\", \", \", d.n_moe_y || \"N/A\", \", \", d.n_moe_z || \"N/A\", \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingDevice(d);\n              setDeviceId(d.x_id_dev);\n              setDeviceName(d.x_nm_dev);\n              setDeviceType(d.i_typ_dev);\n              setLocation({\n                x: d.n_moe_x,\n                y: d.n_moe_y,\n                z: d.n_moe_z || 0\n              });\n            },\n            style: {\n              marginLeft: \"10px\",\n              padding: \"5px\"\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteDevice(d.x_id_dev),\n            style: {\n              marginLeft: \"10px\",\n              padding: \"5px\"\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, d.x_id_dev, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n_s(BuildOutTool, \"IGWEDpdZp3L1j3SS7Ae9x4uaUQc=\");\n_c = BuildOutTool;\nexport default BuildOutTool;\nvar _c;\n$RefreshReg$(_c, \"BuildOutTool\");","map":{"version":3,"names":["React","useState","useEffect","MapBuildOut","jsxDEV","_jsxDEV","BuildOutTool","_s","devices","setDevices","deviceTypes","setDeviceTypes","zones","setZones","zoneTypes","setZoneTypes","maps","setMaps","deviceId","setDeviceId","deviceName","setDeviceName","deviceType","setDeviceType","zoneType","setZoneType","selectedZone","setSelectedZone","location","setLocation","x","y","z","useLeaflet","setUseLeaflet","editingDevice","setEditingDevice","newDeviceType","setNewDeviceType","fetchData","devicesRes","fetch","devicesData","json","typesRes","typesData","zonesRes","zonesData","console","log","zonesArray","Array","isArray","zoneTypesRes","zoneTypesData","mapsRes","mapsData","err","error","filteredZones","filter","i_typ_zn","parseInt","selectedZoneData","find","i_zn","mapId","i_map","handleAddDevice","alert","formData","FormData","append","res","method","body","result","ok","x_id_dev","i_typ_dev","x_nm_dev","n_moe_x","n_moe_y","n_moe_z","resetForm","detail","handleEditDevice","map","d","handleDeleteDevice","handleAddDeviceType","headers","JSON","stringify","description","type_id","x_dsc_dev","handleDeleteDeviceType","typeId","t","handleMapClick","coords","n_x","n_y","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","marginRight","zt","zone_level","zone_name","x_nm_zn","type","checked","disabled","parseFloat","width","onClick","marginLeft","zoneId","onDrawComplete","placeholder","listStyle","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/BuildOutTool.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/BuildOutTool.js 0P.10B.01\n// # Â \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useState, useEffect } from \"react\";\nimport MapBuildOut from \"./MapBuildOut\";\n\nconst BuildOutTool = () => {\n    const [devices, setDevices] = useState([]);\n    const [deviceTypes, setDeviceTypes] = useState([]);\n    const [zones, setZones] = useState([]);\n    const [zoneTypes, setZoneTypes] = useState([]);\n    const [maps, setMaps] = useState([]);\n    const [deviceId, setDeviceId] = useState(\"\");\n    const [deviceName, setDeviceName] = useState(\"\");\n    const [deviceType, setDeviceType] = useState(\"\");\n    const [zoneType, setZoneType] = useState(\"\");\n    const [selectedZone, setSelectedZone] = useState(\"\");\n    const [location, setLocation] = useState({ x: null, y: null, z: 0 });\n    const [useLeaflet, setUseLeaflet] = useState(false);\n    const [editingDevice, setEditingDevice] = useState(null);\n    const [newDeviceType, setNewDeviceType] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const devicesRes = await fetch(\"/api/get_all_devices\");\n                const devicesData = await devicesRes.json();\n                setDevices(devicesData);\n\n                const typesRes = await fetch(\"/api/list_device_types\");\n                const typesData = await typesRes.json();\n                setDeviceTypes(typesData);\n\n                const zonesRes = await fetch(\"/api/zones_with_maps\"); // New endpoint\n                const zonesData = await zonesRes.json();\n                console.log(\"Raw zones response:\", zonesData);\n                const zonesArray = Array.isArray(zonesData) ? zonesData : zonesData.zones || [];\n                setZones(zonesArray);\n\n                const zoneTypesRes = await fetch(\"/zonebuilder/get_zone_types\");\n                const zoneTypesData = await zoneTypesRes.json();\n                setZoneTypes(zoneTypesData || []);\n\n                const mapsRes = await fetch(\"/zonebuilder/get_maps\");\n                const mapsData = await mapsRes.json();\n                setMaps(mapsData.maps || []);\n            } catch (err) {\n                console.error(\"Error fetching initial data:\", err);\n                setZones([]);\n                setZoneTypes([]);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const filteredZones = zones.filter(z => !zoneType || z.i_typ_zn === parseInt(zoneType));\n    const selectedZoneData = zones.find(z => z.i_zn === parseInt(selectedZone));\n    const mapId = selectedZoneData ? selectedZoneData.i_map : null;\n\n    const handleAddDevice = async () => {\n        if (!deviceId || !deviceType) {\n            alert(\"Please provide a Device ID and select a Device Type.\");\n            return;\n        }\n    \n        const formData = new FormData();\n        formData.append(\"device_id\", deviceId);\n        formData.append(\"device_type\", deviceType);\n        formData.append(\"device_name\", deviceName || \"New Device\");\n        if (location.x !== null) formData.append(\"n_moe_x\", location.x);\n        if (location.y !== null) formData.append(\"n_moe_y\", location.y);\n        formData.append(\"n_moe_z\", location.z);\n    \n        try {\n            const res = await fetch(\"/api/add_device\", { method: \"POST\", body: formData });\n            const result = await res.json();\n            if (res.ok) {\n                setDevices([...devices, { \n                    x_id_dev: deviceId, \n                    i_typ_dev: parseInt(deviceType), \n                    x_nm_dev: deviceName || \"New Device\", \n                    n_moe_x: location.x, \n                    n_moe_y: location.y, \n                    n_moe_z: location.z \n                }]);\n                resetForm();\n            } else {\n                alert(`Error: ${result.detail || \"Failed to add device\"}`);\n            }\n        } catch (err) {\n            console.error(\"Error adding device:\", err);\n            alert(\"Error: Failed to connect to server\");\n        }\n    };\n\n    const handleEditDevice = async () => {\n        const formData = new FormData();\n        formData.append(\"device_name\", deviceName);\n        if (location.x !== null) formData.append(\"n_moe_x\", location.x);\n        if (location.y !== null) formData.append(\"n_moe_y\", location.y);\n        formData.append(\"n_moe_z\", location.z);\n\n        try {\n            const res = await fetch(`/api/edit_device/${editingDevice.x_id_dev}`, { method: \"PUT\", body: formData });\n            const result = await res.json();\n            if (res.ok) {\n                setDevices(devices.map(d => d.x_id_dev === editingDevice.x_id_dev ? { ...d, x_nm_dev: deviceName, n_moe_x: location.x, n_moe_y: location.y, n_moe_z: location.z } : d));\n                resetForm();\n            } else {\n                alert(`Error: ${result.detail}`);\n            }\n        } catch (err) {\n            console.error(\"Error editing device:\", err);\n        }\n    };\n\n    const handleDeleteDevice = async (deviceId) => {\n        try {\n            const res = await fetch(`/api/delete_device/${deviceId}`, { method: \"DELETE\" });\n            const result = await res.json();\n            if (res.ok) {\n                setDevices(devices.filter(d => d.x_id_dev !== deviceId));\n            } else {\n                alert(`Error: ${result.detail}`);\n            }\n        } catch (err) {\n            console.error(\"Error deleting device:\", err);\n        }\n    };\n\n    const handleAddDeviceType = async () => {\n        try {\n            const res = await fetch(\"/api/add_device_type\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ description: newDeviceType })\n            });\n            const result = await res.json();\n            if (res.ok) {\n                setDeviceTypes([...deviceTypes, { i_typ_dev: result.type_id, x_dsc_dev: newDeviceType }]);\n                setNewDeviceType(\"\");\n            } else {\n                alert(`Error: ${result.detail}`);\n            }\n        } catch (err) {\n            console.error(\"Error adding device type:\", err);\n        }\n    };\n\n    const handleDeleteDeviceType = async (typeId) => {\n        try {\n            const res = await fetch(`/api/delete_device_type/${typeId}`, { method: \"DELETE\" });\n            const result = await res.json();\n            if (res.ok) {\n                setDeviceTypes(deviceTypes.filter(t => t.i_typ_dev !== typeId));\n            } else {\n                alert(`Error: ${result.detail}`);\n            }\n        } catch (err) {\n            console.error(\"Error deleting device type:\", err);\n        }\n    };\n\n    const resetForm = () => {\n        setDeviceId(\"\");\n        setDeviceName(\"\");\n        setDeviceType(\"\");\n        setZoneType(\"\");\n        setSelectedZone(\"\");\n        setLocation({ x: null, y: null, z: 0 });\n        setEditingDevice(null);\n    };\n\n    const handleMapClick = (coords) => {\n        setLocation({ x: coords.n_x, y: coords.n_y, z: 0 });\n    };\n\n    return (\n        <div style={{ padding: \"20px\" }}>\n            <h2>Build Out Tool</h2>\n\n            {/* Add Device Section */}\n            <div style={{ marginBottom: \"20px\" }}>\n                <h3>Add/Edit Device</h3>\n                <label>Zone Type: </label>\n                <select value={zoneType} onChange={(e) => setZoneType(e.target.value)} style={{ marginRight: \"10px\" }}>\n                    <option value=\"\">Select Zone Type</option>\n                    {zoneTypes.map(zt => (\n                        <option key={zt.zone_level} value={zt.zone_level}>{zt.zone_name}</option>\n                    ))}\n                </select>\n                <label>Zone/Map: </label>\n                <select value={selectedZone} onChange={(e) => setSelectedZone(e.target.value)} style={{ marginRight: \"10px\" }}>\n                    <option value=\"\">Select Zone</option>\n                    {filteredZones.map(z => (\n                        <option key={z.i_zn} value={z.i_zn}>{z.x_nm_zn}</option>\n                    ))}\n                </select>\n                <label>Use Leaflet: </label>\n                <input type=\"checkbox\" checked={useLeaflet} onChange={(e) => setUseLeaflet(e.target.checked)} />\n                <br />\n                <label>Device ID/Serial: </label>\n                <input value={deviceId} onChange={(e) => setDeviceId(e.target.value)} disabled={editingDevice !== null} style={{ marginRight: \"10px\" }} />\n                <label>Name: </label>\n                <input value={deviceName} onChange={(e) => setDeviceName(e.target.value)} style={{ marginRight: \"10px\" }} />\n                <label>Type: </label>\n                <select value={deviceType} onChange={(e) => setDeviceType(e.target.value)} style={{ marginRight: \"10px\" }}>\n                    <option value=\"\">Select Type</option>\n                    {deviceTypes.map(t => (\n                        <option key={t.i_typ_dev} value={t.i_typ_dev}>{t.x_dsc_dev}</option>\n                    ))}\n                </select>\n                <label>X: </label>\n                <input type=\"number\" value={location.x || \"\"} onChange={(e) => setLocation({ ...location, x: parseFloat(e.target.value) || null })} style={{ width: \"60px\", marginRight: \"10px\" }} />\n                <label>Y: </label>\n                <input type=\"number\" value={location.y || \"\"} onChange={(e) => setLocation({ ...location, y: parseFloat(e.target.value) || null })} style={{ width: \"60px\", marginRight: \"10px\" }} />\n                <label>Z: </label>\n                <input type=\"number\" value={location.z} onChange={(e) => setLocation({ ...location, z: parseFloat(e.target.value) || 0 })} style={{ width: \"60px\", marginRight: \"10px\" }} />\n                <button onClick={editingDevice ? handleEditDevice : handleAddDevice} style={{ padding: \"5px 10px\" }}>\n                    {editingDevice ? \"Update\" : \"Add\"}\n                </button>\n                {editingDevice && (\n                    <button onClick={resetForm} style={{ padding: \"5px 10px\", marginLeft: \"10px\" }}>Cancel</button>\n                )}\n                {mapId && (\n                    <MapBuildOut zoneId={mapId} onDrawComplete={handleMapClick} devices={devices} useLeaflet={useLeaflet} />\n                )}\n            </div>\n\n            {/* Device Types Section */}\n            <div style={{ marginBottom: \"20px\" }}>\n                <h3>Device Types</h3>\n                <input value={newDeviceType} onChange={(e) => setNewDeviceType(e.target.value)} placeholder=\"New Device Type\" style={{ marginRight: \"10px\" }} />\n                <button onClick={handleAddDeviceType} style={{ padding: \"5px 10px\" }}>Add Type</button>\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {deviceTypes.map(t => (\n                        <li key={t.i_typ_dev}>\n                            {t.x_dsc_dev} (ID: {t.i_typ_dev})\n                            <button onClick={() => handleDeleteDeviceType(t.i_typ_dev)} style={{ marginLeft: \"10px\", padding: \"5px\" }}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Devices List */}\n            <div>\n                <h3>Devices</h3>\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {devices.map(d => (\n                        <li key={d.x_id_dev} style={{ marginBottom: \"10px\" }}>\n                            {d.x_id_dev} - {d.x_nm_dev} (Type: {d.i_typ_dev}, Loc: {d.n_moe_x || \"N/A\"}, {d.n_moe_y || \"N/A\"}, {d.n_moe_z || \"N/A\"})\n                            <button onClick={() => { setEditingDevice(d); setDeviceId(d.x_id_dev); setDeviceName(d.x_nm_dev); setDeviceType(d.i_typ_dev); setLocation({ x: d.n_moe_x, y: d.n_moe_y, z: d.n_moe_z || 0 }); }} style={{ marginLeft: \"10px\", padding: \"5px\" }}>Edit</button>\n                            <button onClick={() => handleDeleteDevice(d.x_id_dev)} style={{ marginLeft: \"10px\", padding: \"5px\" }}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default BuildOutTool;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}