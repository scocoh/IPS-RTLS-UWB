{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\n// Import Leaflet.Draw CSS via a relative path or global import\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // This should work after npm install\nimport LDraw from \"leaflet-draw\"; // Use a named import for clarity\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  zoneId,\n  onDrawComplete\n}) => {\n  _s();\n  const [mapData, setMapData] = useState(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    if (zoneId) {\n      fetch(`/maps/get_map_data/${zoneId}`).then(response => response.json()).then(data => setMapData(data)).catch(error => console.error(\"Error fetching map data:\", error));\n    }\n  }, [zoneId]);\n  useEffect(() => {\n    if (mapData && !mapRef.current) {\n      const map = L.map(\"map\").setView([(mapData.bounds[0][0] + mapData.bounds[1][0]) / 2, (mapData.bounds[0][1] + mapData.bounds[1][1]) / 2], 13);\n      mapRef.current = map;\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(map);\n      const drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems\n        },\n        draw: {\n          polygon: true,\n          rectangle: true,\n          polyline: false,\n          circle: false,\n          marker: false\n        }\n      });\n      map.addControl(drawControl);\n      map.on(\"draw:created\", e => {\n        const layer = e.layer;\n        drawnItems.addLayer(layer);\n        const coordinates = layer.getLatLngs()[0].map(coord => [coord.lat, coord.lng]);\n        if (onDrawComplete) {\n          onDrawComplete(JSON.stringify(coordinates));\n        }\n      });\n      return () => {\n        map.remove();\n      };\n    }\n  }, [mapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"Bvo4iefA8yIf1rM1kAH0w2RiUWg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useRef","L","LDraw","jsxDEV","_jsxDEV","Map","zoneId","onDrawComplete","_s","mapData","setMapData","mapRef","fetch","then","response","json","data","catch","error","console","current","map","setView","bounds","tileLayer","attribution","addTo","imageOverlay","imageUrl","drawnItems","FeatureGroup","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","rectangle","polyline","circle","marker","addControl","on","e","layer","coordinates","getLatLngs","coord","lat","lng","JSON","stringify","remove","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\n// Import Leaflet.Draw CSS via a relative path or global import\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // This should work after npm install\nimport LDraw from \"leaflet-draw\"; // Use a named import for clarity\n\nconst Map = ({ zoneId, onDrawComplete }) => {\n  const [mapData, setMapData] = useState(null);\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    if (zoneId) {\n      fetch(`/maps/get_map_data/${zoneId}`)\n        .then((response) => response.json())\n        .then((data) => setMapData(data))\n        .catch((error) => console.error(\"Error fetching map data:\", error));\n    }\n  }, [zoneId]);\n\n  useEffect(() => {\n    if (mapData && !mapRef.current) {\n      const map = L.map(\"map\").setView(\n        [(mapData.bounds[0][0] + mapData.bounds[1][0]) / 2, (mapData.bounds[0][1] + mapData.bounds[1][1]) / 2],\n        13\n      );\n      mapRef.current = map;\n\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(map);\n\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(map);\n\n      const drawnItems = new L.FeatureGroup();\n      map.addLayer(drawnItems);\n\n      const drawControl = new L.Control.Draw({\n        edit: { featureGroup: drawnItems },\n        draw: { polygon: true, rectangle: true, polyline: false, circle: false, marker: false },\n      });\n      map.addControl(drawControl);\n\n      map.on(\"draw:created\", (e) => {\n        const layer = e.layer;\n        drawnItems.addLayer(layer);\n        const coordinates = layer.getLatLngs()[0].map((coord) => [coord.lat, coord.lng]);\n        if (onDrawComplete) {\n          onDrawComplete(JSON.stringify(coordinates));\n        }\n      });\n\n      return () => {\n        map.remove();\n      };\n    }\n  }, [mapData]);\n\n  return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n};\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}