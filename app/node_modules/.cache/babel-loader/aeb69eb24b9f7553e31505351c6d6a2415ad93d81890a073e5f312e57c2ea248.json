{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPreview = ({\n  mapId,\n  onClose\n}) => {\n  _s();\n  const [imageSrc, setImageSrc] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMapImage();\n  }, [mapId]);\n  const fetchMapImage = async () => {\n    try {\n      const response = await fetch(`/maps/map_image/${mapId}`);\n      if (!response.ok) throw new Error(\"Failed to load map image\");\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setImageSrc(url);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.8)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"white\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this) : imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"Map Preview\",\n        style: {\n          maxWidth: \"500px\",\n          maxHeight: \"500px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 125\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: {\n          padding: \"10px\",\n          marginTop: \"10px\",\n          background: \"red\",\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPreview, \"69j50m+VwOBzGMGg/ZyrbPJRgGU=\");\n_c = MapPreview;\nexport default MapPreview;\nvar _c;\n$RefreshReg$(_c, \"MapPreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MapPreview","mapId","onClose","_s","imageSrc","setImageSrc","error","setError","fetchMapImage","response","fetch","ok","Error","blob","url","URL","createObjectURL","err","message","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","children","background","padding","borderRadius","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","color","src","alt","maxWidth","maxHeight","onClick","marginTop","border","cursor","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapPreview.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst MapPreview = ({ mapId, onClose }) => {\n    const [imageSrc, setImageSrc] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchMapImage();\n    }, [mapId]);\n\n    const fetchMapImage = async () => {\n        try {\n            const response = await fetch(`/maps/map_image/${mapId}`);\n            if (!response.ok) throw new Error(\"Failed to load map image\");\n\n            const blob = await response.blob();\n            const url = URL.createObjectURL(blob);\n            setImageSrc(url);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <div style={{\n            position: \"fixed\", top: 0, left: 0, width: \"100%\", height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.8)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"\n        }}>\n            <div style={{\n                background: \"white\", padding: \"20px\", borderRadius: \"8px\", textAlign: \"center\"\n            }}>\n                <h3>Map Preview</h3>\n                {error ? <p style={{ color: \"red\" }}>‚ùå {error}</p> : (\n                    imageSrc ? <img src={imageSrc} alt=\"Map Preview\" style={{ maxWidth: \"500px\", maxHeight: \"500px\" }} /> : <p>Loading...</p>\n                )}\n                <br />\n                <button onClick={onClose} style={{ padding: \"10px\", marginTop: \"10px\", background: \"red\", color: \"white\", border: \"none\", cursor: \"pointer\" }}>Close</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MapPreview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}