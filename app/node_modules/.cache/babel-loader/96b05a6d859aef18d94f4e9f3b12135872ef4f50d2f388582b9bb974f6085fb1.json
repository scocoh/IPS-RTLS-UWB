{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBuildOut = ({\n  onDrawComplete,\n  devices\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  useEffect(() => {\n    if (!mapInstance.current) {\n      fetch(\"/zonebuilder/get_maps\").then(res => res.json()).then(data => {\n        const mapData = data.maps[0]; // Default to first map; enhance later\n        mapInstance.current = L.map(mapRef.current, {\n          crs: L.CRS.Simple\n        }).setView([0, 0], 1);\n        L.tileLayer(\"data:image/png;base64,{mapData.image}\", {\n          bounds: [[0, 0], [mapData.height, mapData.width]]\n        }).addTo(mapInstance.current);\n        mapInstance.current.on(\"click\", e => {\n          const {\n            lat,\n            lng\n          } = e.latlng;\n          onDrawComplete({\n            n_x: lng,\n            n_y: lat\n          });\n          L.marker([lat, lng]).addTo(mapInstance.current);\n        });\n        devices.forEach(d => {\n          if (d.n_moe_x && d.n_moe_y) {\n            L.marker([d.n_moe_y, d.n_moe_x]).addTo(mapInstance.current).bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n          }\n        });\n      }).catch(err => console.error(\"Error loading map:\", err));\n    }\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [onDrawComplete, devices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: \"400px\",\n      width: \"600px\",\n      border: \"2px solid black\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(MapBuildOut, \"jj23UBFmYip2SDX5FMmvO4fZUgM=\");\n_c = MapBuildOut;\nexport default MapBuildOut;\nvar _c;\n$RefreshReg$(_c, \"MapBuildOut\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","MapBuildOut","onDrawComplete","devices","_s","mapRef","mapInstance","current","fetch","then","res","json","data","mapData","maps","map","crs","CRS","Simple","setView","tileLayer","bounds","height","width","addTo","on","e","lat","lng","latlng","n_x","n_y","marker","forEach","d","n_moe_x","n_moe_y","bindPopup","x_id_dev","x_nm_dev","catch","err","console","error","remove","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapBuildOut = ({ onDrawComplete, devices }) => {\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n\n    useEffect(() => {\n        if (!mapInstance.current) {\n            fetch(\"/zonebuilder/get_maps\")\n                .then(res => res.json())\n                .then(data => {\n                    const mapData = data.maps[0]; // Default to first map; enhance later\n                    mapInstance.current = L.map(mapRef.current, { crs: L.CRS.Simple }).setView([0, 0], 1);\n                    L.tileLayer(\"data:image/png;base64,{mapData.image}\", {\n                        bounds: [[0, 0], [mapData.height, mapData.width]]\n                    }).addTo(mapInstance.current);\n\n                    mapInstance.current.on(\"click\", (e) => {\n                        const { lat, lng } = e.latlng;\n                        onDrawComplete({ n_x: lng, n_y: lat });\n                        L.marker([lat, lng]).addTo(mapInstance.current);\n                    });\n\n                    devices.forEach(d => {\n                        if (d.n_moe_x && d.n_moe_y) {\n                            L.marker([d.n_moe_y, d.n_moe_x])\n                                .addTo(mapInstance.current)\n                                .bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n                        }\n                    });\n                })\n                .catch(err => console.error(\"Error loading map:\", err));\n        }\n\n        return () => {\n            if (mapInstance.current) {\n                mapInstance.current.remove();\n                mapInstance.current = null;\n            }\n        };\n    }, [onDrawComplete, devices]);\n\n    return <div ref={mapRef} style={{ height: \"400px\", width: \"600px\", border: \"2px solid black\" }} />;\n};\n\nexport default MapBuildOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}