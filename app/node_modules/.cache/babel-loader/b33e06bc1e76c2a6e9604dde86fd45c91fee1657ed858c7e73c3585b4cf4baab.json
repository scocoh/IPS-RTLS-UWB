{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/CreateTrigger.js\",\n  _s = $RefreshSig$();\n// Version: 2500307 src/components/CreateTrigger.js Version 0P.3B.001 \nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTrigger = () => {\n  _s();\n  const [zones, setZones] = useState([]);\n  const [triggerName, setTriggerName] = useState(\"\");\n  const [triggerDescription, setTriggerDescription] = useState(\"\");\n  const [selectedZone, setSelectedZone] = useState(\"\");\n\n  // Fetch zones on component mount\n  useEffect(() => {\n    fetch(\"/get_campus_zones\") // Make sure this matches the backend route for fetching zones\n    .then(response => response.json()).then(data => setZones(data));\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const triggerData = {\n      name: triggerName,\n      description: triggerDescription,\n      zone_id: selectedZone // Send the selected zone ID\n    };\n    const response = await fetch(\"/add_trigger\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(triggerData)\n    });\n    if (response.ok) {\n      const result = await response.json();\n      alert(`Trigger created with ID: ${result.trigger_id}`);\n    } else {\n      alert(\"Error creating trigger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Trigger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: triggerName,\n          onChange: e => setTriggerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: triggerDescription,\n          onChange: e => setTriggerDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Zone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedZone,\n          onChange: e => setSelectedZone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: zone.zone_id,\n            children: zone.zone_name\n          }, zone.zone_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Trigger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTrigger, \"zIoxOTOPDr65eHhoTh7pULYbzXA=\");\n_c = CreateTrigger;\nexport default CreateTrigger;\nvar _c;\n$RefreshReg$(_c, \"CreateTrigger\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateTrigger","_s","zones","setZones","triggerName","setTriggerName","triggerDescription","setTriggerDescription","selectedZone","setSelectedZone","fetch","then","response","json","data","handleSubmit","e","preventDefault","triggerData","name","description","zone_id","method","headers","body","JSON","stringify","ok","result","alert","trigger_id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","zone","zone_name","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/CreateTrigger.js"],"sourcesContent":["// Version: 2500307 src/components/CreateTrigger.js Version 0P.3B.001 \nimport React, { useState, useEffect } from 'react';\n\nconst CreateTrigger = () => {\n    const [zones, setZones] = useState([]);\n    const [triggerName, setTriggerName] = useState(\"\");\n    const [triggerDescription, setTriggerDescription] = useState(\"\");\n    const [selectedZone, setSelectedZone] = useState(\"\");\n\n    // Fetch zones on component mount\n    useEffect(() => {\n        fetch(\"/get_campus_zones\")  // Make sure this matches the backend route for fetching zones\n            .then((response) => response.json())\n            .then((data) => setZones(data));\n    }, []);\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const triggerData = {\n            name: triggerName,\n            description: triggerDescription,\n            zone_id: selectedZone,  // Send the selected zone ID\n        };\n\n        const response = await fetch(\"/add_trigger\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(triggerData),\n        });\n\n        if (response.ok) {\n            const result = await response.json();\n            alert(`Trigger created with ID: ${result.trigger_id}`);\n        } else {\n            alert(\"Error creating trigger\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Create Trigger</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Name:</label>\n                    <input\n                        type=\"text\"\n                        value={triggerName}\n                        onChange={(e) => setTriggerName(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Description:</label>\n                    <input\n                        type=\"text\"\n                        value={triggerDescription}\n                        onChange={(e) => setTriggerDescription(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Zone:</label>\n                    <select\n                        value={selectedZone}\n                        onChange={(e) => setSelectedZone(e.target.value)}\n                    >\n                        <option value=\"\">Select Zone</option>\n                        {zones.map((zone) => (\n                            <option key={zone.zone_id} value={zone.zone_id}>\n                                {zone.zone_name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <button type=\"submit\">Create Trigger</button>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateTrigger;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}