{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/ZoneBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-draw\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZoneBuilder = () => {\n  _s();\n  const [zones, setZones] = useState([]);\n  const [map, setMap] = useState(null);\n  const [drawnItems, setDrawnItems] = useState(null);\n  useEffect(() => {\n    fetch(\"http://192.168.210.231:8000/api/get_zone_types\").then(response => response.json()).then(data => setZones(data));\n    const leafletMap = L.map(\"zoneMap\").setView([0, 0], 2);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(leafletMap);\n    const drawnItemsLayer = new L.FeatureGroup();\n    leafletMap.addLayer(drawnItemsLayer);\n    setDrawnItems(drawnItemsLayer);\n    const drawControl = new L.Control.Draw({\n      edit: {\n        featureGroup: drawnItemsLayer\n      },\n      draw: {\n        polygon: true,\n        rectangle: false,\n        circle: false,\n        marker: false\n      }\n    });\n    leafletMap.addControl(drawControl);\n    leafletMap.on(\"draw:created\", event => {\n      drawnItemsLayer.addLayer(event.layer);\n    });\n    setMap(leafletMap);\n  }, []);\n  const saveZone = () => {\n    const vertices = [];\n    drawnItems.eachLayer(layer => {\n      if (layer instanceof L.Polygon) {\n        layer.getLatLngs()[0].forEach(point => {\n          vertices.push({\n            n_x: point.lng,\n            n_y: point.lat,\n            n_z: 0\n          });\n        });\n      }\n    });\n    fetch(\"http://192.168.210.231:8000/api/create_zone\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        zone_name: \"Test Zone\",\n        map_id: 1,\n        zone_level: 1,\n        parent_zone_id: null,\n        vertices\n      })\n    }).then(response => response.json()).then(data => console.log(\"Zone Created:\", data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zone Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"zoneMap\",\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveZone,\n      children: \"Save Zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ZoneBuilder, \"deENHqloKv2hhMBoA4scL5iv1hg=\");\n_c = ZoneBuilder;\nexport default ZoneBuilder;\nvar _c;\n$RefreshReg$(_c, \"ZoneBuilder\");","map":{"version":3,"names":["React","useEffect","useState","L","jsxDEV","_jsxDEV","ZoneBuilder","_s","zones","setZones","map","setMap","drawnItems","setDrawnItems","fetch","then","response","json","data","leafletMap","setView","tileLayer","addTo","drawnItemsLayer","FeatureGroup","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","rectangle","circle","marker","addControl","on","event","layer","saveZone","vertices","eachLayer","Polygon","getLatLngs","forEach","point","push","n_x","lng","n_y","lat","n_z","method","headers","body","JSON","stringify","zone_name","map_id","zone_level","parent_zone_id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","onClick","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/ZoneBuilder.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-draw\";\n\nconst ZoneBuilder = () => {\n    const [zones, setZones] = useState([]);\n    const [map, setMap] = useState(null);\n    const [drawnItems, setDrawnItems] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://192.168.210.231:8000/api/get_zone_types\")\n            .then(response => response.json())\n            .then(data => setZones(data));\n\n        const leafletMap = L.map(\"zoneMap\").setView([0, 0], 2);\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(leafletMap);\n        \n        const drawnItemsLayer = new L.FeatureGroup();\n        leafletMap.addLayer(drawnItemsLayer);\n        setDrawnItems(drawnItemsLayer);\n\n        const drawControl = new L.Control.Draw({\n            edit: { featureGroup: drawnItemsLayer },\n            draw: { polygon: true, rectangle: false, circle: false, marker: false }\n        });\n\n        leafletMap.addControl(drawControl);\n\n        leafletMap.on(\"draw:created\", (event) => {\n            drawnItemsLayer.addLayer(event.layer);\n        });\n\n        setMap(leafletMap);\n    }, []);\n\n    const saveZone = () => {\n        const vertices = [];\n        drawnItems.eachLayer(layer => {\n            if (layer instanceof L.Polygon) {\n                layer.getLatLngs()[0].forEach(point => {\n                    vertices.push({ n_x: point.lng, n_y: point.lat, n_z: 0 });\n                });\n            }\n        });\n\n        fetch(\"http://192.168.210.231:8000/api/create_zone\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ zone_name: \"Test Zone\", map_id: 1, zone_level: 1, parent_zone_id: null, vertices })\n        })\n        .then(response => response.json())\n        .then(data => console.log(\"Zone Created:\", data));\n    };\n\n    return (\n        <div>\n            <h2>Zone Builder</h2>\n            <div id=\"zoneMap\" style={{ height: \"500px\", width: \"100%\" }}></div>\n            <button onClick={saveZone}>Save Zone</button>\n        </div>\n    );\n};\n\nexport default ZoneBuilder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,gDAAgD,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAAC,CAAC;IAEjC,MAAMC,UAAU,GAAGhB,CAAC,CAACO,GAAG,CAAC,SAAS,CAAC,CAACU,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtDjB,CAAC,CAACkB,SAAS,CAAC,oDAAoD,CAAC,CAACC,KAAK,CAACH,UAAU,CAAC;IAEnF,MAAMI,eAAe,GAAG,IAAIpB,CAAC,CAACqB,YAAY,CAAC,CAAC;IAC5CL,UAAU,CAACM,QAAQ,CAACF,eAAe,CAAC;IACpCV,aAAa,CAACU,eAAe,CAAC;IAE9B,MAAMG,WAAW,GAAG,IAAIvB,CAAC,CAACwB,OAAO,CAACC,IAAI,CAAC;MACnCC,IAAI,EAAE;QAAEC,YAAY,EAAEP;MAAgB,CAAC;MACvCQ,IAAI,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,SAAS,EAAE,KAAK;QAAEC,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAM;IAC1E,CAAC,CAAC;IAEFhB,UAAU,CAACiB,UAAU,CAACV,WAAW,CAAC;IAElCP,UAAU,CAACkB,EAAE,CAAC,cAAc,EAAGC,KAAK,IAAK;MACrCf,eAAe,CAACE,QAAQ,CAACa,KAAK,CAACC,KAAK,CAAC;IACzC,CAAC,CAAC;IAEF5B,MAAM,CAACQ,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,QAAQ,GAAG,EAAE;IACnB7B,UAAU,CAAC8B,SAAS,CAACH,KAAK,IAAI;MAC1B,IAAIA,KAAK,YAAYpC,CAAC,CAACwC,OAAO,EAAE;QAC5BJ,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI;UACnCL,QAAQ,CAACM,IAAI,CAAC;YAAEC,GAAG,EAAEF,KAAK,CAACG,GAAG;YAAEC,GAAG,EAAEJ,KAAK,CAACK,GAAG;YAAEC,GAAG,EAAE;UAAE,CAAC,CAAC;QAC7D,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEFtC,KAAK,CAAC,6CAA6C,EAAE;MACjDuC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAE,WAAW;QAAEC,MAAM,EAAE,CAAC;QAAEC,UAAU,EAAE,CAAC;QAAEC,cAAc,EAAE,IAAI;QAAEpB;MAAS,CAAC;IAC7G,CAAC,CAAC,CACD1B,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI4C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE7C,IAAI,CAAC,CAAC;EACrD,CAAC;EAED,oBACIb,OAAA;IAAA2D,QAAA,gBACI3D,OAAA;MAAA2D,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB/D,OAAA;MAAKgE,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnE/D,OAAA;MAAQoE,OAAO,EAAEjC,QAAS;MAAAwB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAAC7D,EAAA,CAzDID,WAAW;AAAAoE,EAAA,GAAXpE,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}