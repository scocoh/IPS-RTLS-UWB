{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\",\n  _s = $RefreshSig$();\n// /home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapZoneBuilder = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  zoneId,\n  onDrawComplete,\n  triggerColor,\n  useLeaflet,\n  drawnItems,\n  parentZoneVertices\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const parentLayer = useRef(null); // For Leaflet mode\n\n  // Fetch map data\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n          const data = await response.json();\n          console.log(\"✅ Fetched map data:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    } else {\n      setMapData(null);\n      setError(null);\n    }\n  }, [zoneId]);\n\n  // Canvas rendering\n  useEffect(() => {\n    if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n      console.log(\"🖌 Initializing Canvas rendering...\");\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        console.error(\"❌ Canvas context is null\");\n        return;\n      }\n      ctxRef.current = ctx;\n      canvas.width = 800;\n      canvas.height = 600;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      img.onload = () => {\n        console.log(\"✅ Canvas: Map image loaded:\", mapData.imageUrl);\n        drawCanvas();\n      };\n      img.onerror = () => {\n        console.error(\"❌ Canvas: Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image.\");\n      };\n      const handleMouseDown = e => {\n        if (e.button !== 0) return;\n        isDrawing.current = true;\n        const rect = canvas.getBoundingClientRect();\n        if (!rect) {\n          console.error(\"❌ Canvas bounding rect is null\");\n          return;\n        }\n        const scaleX = canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]); // max_x - min_x\n        const scaleY = canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0]); // max_y - min_y\n\n        const x = mapData.bounds[0][1] + (e.clientX - rect.left) / scaleX;\n        const y = mapData.bounds[1][0] - (e.clientY - rect.top) / scaleY;\n        points.current.push({\n          x,\n          y\n        });\n        console.log(\"🖱 Canvas click (feet):\", {\n          x,\n          y\n        });\n        drawCanvas();\n        onDrawComplete(points.current);\n      };\n      const drawCanvas = () => {\n        if (!ctxRef.current || !imageRef.current) {\n          console.error(\"❌ Canvas context or image ref is null\");\n          return;\n        }\n        const ctx = ctxRef.current;\n        const img = imageRef.current;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        // Draw parent zone vertices as a light blue shape (non-editable)\n        if (parentZoneVertices && parentZoneVertices.length > 0) {\n          console.log(\"📌 Rendering parent zone vertices in Canvas:\", parentZoneVertices);\n          ctx.beginPath();\n          let firstPoint = true;\n          parentZoneVertices.forEach((vertex, index) => {\n            if (!vertex.x || !vertex.y || isNaN(vertex.x) || isNaN(vertex.y)) {\n              console.warn(`⚠️ Invalid vertex at index ${index}:`, vertex);\n              return;\n            }\n            const x = (vertex.x - mapData.bounds[0][1]) * (canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]));\n            const y = canvas.height - (vertex.y - mapData.bounds[0][0]) * (canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0]));\n            if (firstPoint) {\n              ctx.moveTo(x, y);\n              firstPoint = false;\n            } else {\n              ctx.lineTo(x, y);\n            }\n          });\n          if (!firstPoint) {\n            ctx.closePath();\n            ctx.strokeStyle = \"lightblue\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            ctx.fillStyle = \"rgba(173, 216, 230, 0.3)\"; // Light blue fill with transparency\n            ctx.fill();\n            console.log(\"✅ Rendered parent zone shape in Canvas\");\n          } else {\n            console.warn(\"⚠️ No valid points to render parent zone in Canvas\");\n          }\n        } else {\n          console.log(\"ℹ️ No parent zone vertices to render in Canvas\");\n        }\n\n        // Draw current editable polygon\n        if (points.current.length === 0) return;\n        ctx.beginPath();\n        points.current.forEach((point, index) => {\n          const x = (point.x - mapData.bounds[0][1]) * (canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]));\n          const y = canvas.height - (point.y - mapData.bounds[0][0]) * (canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0]));\n          if (index === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n          ctx.fillStyle = \"blue\";\n          ctx.fillRect(x - 2, y - 2, 4, 4);\n        });\n        ctx.closePath();\n        ctx.strokeStyle = triggerColor || \"red\";\n        ctx.stroke();\n      };\n      canvas.addEventListener(\"mousedown\", handleMouseDown);\n      isInitialized.current = true;\n      return () => {\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\n        isInitialized.current = false; // Reset for reinitialization\n      };\n    }\n  }, [mapData, useLeaflet, onDrawComplete, triggerColor, parentZoneVertices]);\n\n  // Leaflet rendering\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n      console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple\n      }).fitBounds(mapData.bounds);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      mapInstance.current.addLayer(drawnItems);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems\n        },\n        draw: {\n          polygon: {\n            shapeOptions: {\n              color: triggerColor || \"red\",\n              weight: 2\n            }\n          },\n          rectangle: false,\n          circle: false,\n          polyline: false,\n          marker: false\n        }\n      });\n      mapInstance.current.addControl(drawControl);\n      mapInstance.current.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.addLayer(layer);\n        const coords = layer.getLatLngs()[0].map((point, index) => ({\n          n_x: point.lng,\n          n_y: point.lat,\n          n_z: 0,\n          n_ord: index + 1\n        }));\n        console.log(\"🖌 Leaflet drawn coordinates (feet):\", coords);\n        onDrawComplete(coords);\n      });\n      console.log(\"✅ Leaflet map initialized with bounds:\", mapData.bounds);\n    }\n\n    // Draw parent zone vertices as a non-editable light blue shape\n    if (useLeaflet && mapInstance.current) {\n      if (parentLayer.current) {\n        mapInstance.current.removeLayer(parentLayer.current);\n        parentLayer.current = null;\n      }\n      if (parentZoneVertices && parentZoneVertices.length > 0) {\n        console.log(\"📌 Rendering parent zone vertices in Leaflet:\", parentZoneVertices);\n        const latLngs = parentZoneVertices.map(vertex => {\n          if (!vertex.x || !vertex.y || isNaN(vertex.x) || isNaN(vertex.y)) {\n            console.warn(`⚠️ Invalid vertex in parentZoneVertices:`, vertex);\n            return null;\n          }\n          return [vertex.y, vertex.x]; // [lat, lng] for Leaflet\n        }).filter(coord => coord !== null);\n        if (latLngs.length > 0) {\n          parentLayer.current = L.polygon(latLngs, {\n            color: \"lightblue\",\n            weight: 2,\n            fillColor: \"lightblue\",\n            fillOpacity: 0.3,\n            interactive: false\n          }).addTo(mapInstance.current);\n          console.log(\"✅ Rendered parent zone shape in Leaflet:\", latLngs);\n        } else {\n          console.warn(\"⚠️ No valid latLngs to render parent zone in Leaflet\");\n        }\n      } else {\n        console.log(\"ℹ️ No parent zone vertices to render in Leaflet\");\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        console.log(\"🗺 Leaflet map cleaned up\");\n      }\n    };\n  }, [mapData, useLeaflet, onDrawComplete, triggerColor, drawnItems, parentZoneVertices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"600px\",\n        width: \"800px\",\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"map\",\n      style: {\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n}, \"J9ycUjwv72a9Rk0MefVyzF6ryRY=\")), \"J9ycUjwv72a9Rk0MefVyzF6ryRY=\");\n_c2 = MapZoneBuilder;\nexport default MapZoneBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapZoneBuilder$memo\");\n$RefreshReg$(_c2, \"MapZoneBuilder\");","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","L","jsxDEV","_jsxDEV","MapZoneBuilder","_s","_c","zoneId","onDrawComplete","triggerColor","useLeaflet","drawnItems","parentZoneVertices","mapRef","mapInstance","canvasRef","mapData","setMapData","error","setError","isInitialized","points","isDrawing","ctxRef","imageRef","parentLayer","fetchMapData","response","fetch","ok","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","width","height","img","Image","crossOrigin","src","imageUrl","onload","drawCanvas","onerror","handleMouseDown","e","button","rect","getBoundingClientRect","scaleX","bounds","scaleY","x","clientX","left","y","clientY","top","push","clearRect","drawImage","length","beginPath","firstPoint","forEach","vertex","index","isNaN","warn","moveTo","lineTo","closePath","strokeStyle","lineWidth","stroke","fillStyle","fill","point","fillRect","addEventListener","removeEventListener","map","crs","CRS","Simple","fitBounds","imageOverlay","addTo","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","shapeOptions","color","weight","rectangle","circle","polyline","marker","addControl","on","Event","CREATED","event","layer","coords","getLatLngs","n_x","lng","n_y","lat","n_z","n_ord","removeLayer","latLngs","filter","coord","fillColor","fillOpacity","interactive","remove","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","id","_c2","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js"],"sourcesContent":["// /home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport \"./Map.css\";\n\nconst MapZoneBuilder = memo(({ zoneId, onDrawComplete, triggerColor, useLeaflet, drawnItems, parentZoneVertices }) => {\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n    const canvasRef = useRef(null);\n    const [mapData, setMapData] = useState(null);\n    const [error, setError] = useState(null);\n    const isInitialized = useRef(false);\n    const points = useRef([]);\n    const isDrawing = useRef(false);\n    const ctxRef = useRef(null);\n    const imageRef = useRef(null);\n    const parentLayer = useRef(null); // For Leaflet mode\n\n    // Fetch map data\n    useEffect(() => {\n        if (zoneId) {\n            const fetchMapData = async () => {\n                try {\n                    const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n                    const data = await response.json();\n                    console.log(\"✅ Fetched map data:\", data);\n                    setMapData(data);\n                    setError(null);\n                } catch (error) {\n                    console.error(\"❌ Error fetching map data:\", error);\n                    setError(`Error fetching map data: ${error.message}`);\n                }\n            };\n            fetchMapData();\n        } else {\n            setMapData(null);\n            setError(null);\n        }\n    }, [zoneId]);\n\n    // Canvas rendering\n    useEffect(() => {\n        if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n            console.log(\"🖌 Initializing Canvas rendering...\");\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) {\n                console.error(\"❌ Canvas context is null\");\n                return;\n            }\n            ctxRef.current = ctx;\n\n            canvas.width = 800;\n            canvas.height = 600;\n\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.src = mapData.imageUrl;\n            imageRef.current = img;\n\n            img.onload = () => {\n                console.log(\"✅ Canvas: Map image loaded:\", mapData.imageUrl);\n                drawCanvas();\n            };\n\n            img.onerror = () => {\n                console.error(\"❌ Canvas: Failed to load map image:\", mapData.imageUrl);\n                setError(\"Failed to load map image.\");\n            };\n\n            const handleMouseDown = (e) => {\n                if (e.button !== 0) return;\n                isDrawing.current = true;\n                const rect = canvas.getBoundingClientRect();\n                if (!rect) {\n                    console.error(\"❌ Canvas bounding rect is null\");\n                    return;\n                }\n                const scaleX = canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]); // max_x - min_x\n                const scaleY = canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0]); // max_y - min_y\n\n                const x = mapData.bounds[0][1] + ((e.clientX - rect.left) / scaleX);\n                const y = mapData.bounds[1][0] - ((e.clientY - rect.top) / scaleY);\n\n                points.current.push({ x, y });\n                console.log(\"🖱 Canvas click (feet):\", { x, y });\n\n                drawCanvas();\n                onDrawComplete(points.current);\n            };\n\n            const drawCanvas = () => {\n                if (!ctxRef.current || !imageRef.current) {\n                    console.error(\"❌ Canvas context or image ref is null\");\n                    return;\n                }\n                const ctx = ctxRef.current;\n                const img = imageRef.current;\n\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                // Draw parent zone vertices as a light blue shape (non-editable)\n                if (parentZoneVertices && parentZoneVertices.length > 0) {\n                    console.log(\"📌 Rendering parent zone vertices in Canvas:\", parentZoneVertices);\n                    ctx.beginPath();\n                    let firstPoint = true;\n                    parentZoneVertices.forEach((vertex, index) => {\n                        if (!vertex.x || !vertex.y || isNaN(vertex.x) || isNaN(vertex.y)) {\n                            console.warn(`⚠️ Invalid vertex at index ${index}:`, vertex);\n                            return;\n                        }\n                        const x = (vertex.x - mapData.bounds[0][1]) * (canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]));\n                        const y = canvas.height - ((vertex.y - mapData.bounds[0][0]) * (canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0])));\n                        if (firstPoint) {\n                            ctx.moveTo(x, y);\n                            firstPoint = false;\n                        } else {\n                            ctx.lineTo(x, y);\n                        }\n                    });\n                    if (!firstPoint) {\n                        ctx.closePath();\n                        ctx.strokeStyle = \"lightblue\";\n                        ctx.lineWidth = 2;\n                        ctx.stroke();\n                        ctx.fillStyle = \"rgba(173, 216, 230, 0.3)\"; // Light blue fill with transparency\n                        ctx.fill();\n                        console.log(\"✅ Rendered parent zone shape in Canvas\");\n                    } else {\n                        console.warn(\"⚠️ No valid points to render parent zone in Canvas\");\n                    }\n                } else {\n                    console.log(\"ℹ️ No parent zone vertices to render in Canvas\");\n                }\n\n                // Draw current editable polygon\n                if (points.current.length === 0) return;\n                ctx.beginPath();\n                points.current.forEach((point, index) => {\n                    const x = (point.x - mapData.bounds[0][1]) * (canvas.width / (mapData.bounds[1][1] - mapData.bounds[0][1]));\n                    const y = canvas.height - ((point.y - mapData.bounds[0][0]) * (canvas.height / (mapData.bounds[1][0] - mapData.bounds[0][0])));\n                    if (index === 0) ctx.moveTo(x, y);\n                    else ctx.lineTo(x, y);\n\n                    ctx.fillStyle = \"blue\";\n                    ctx.fillRect(x - 2, y - 2, 4, 4);\n                });\n                ctx.closePath();\n                ctx.strokeStyle = triggerColor || \"red\";\n                ctx.stroke();\n            };\n\n            canvas.addEventListener(\"mousedown\", handleMouseDown);\n            isInitialized.current = true;\n            return () => {\n                canvas.removeEventListener(\"mousedown\", handleMouseDown);\n                isInitialized.current = false; // Reset for reinitialization\n            };\n        }\n    }, [mapData, useLeaflet, onDrawComplete, triggerColor, parentZoneVertices]);\n\n    // Leaflet rendering\n    useEffect(() => {\n        if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n            console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n            mapInstance.current = L.map(mapRef.current, { crs: L.CRS.Simple }).fitBounds(mapData.bounds);\n            L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n            mapInstance.current.addLayer(drawnItems);\n\n            const drawControl = new L.Control.Draw({\n                edit: { featureGroup: drawnItems },\n                draw: {\n                    polygon: { shapeOptions: { color: triggerColor || \"red\", weight: 2 } },\n                    rectangle: false,\n                    circle: false,\n                    polyline: false,\n                    marker: false,\n                },\n            });\n            mapInstance.current.addControl(drawControl);\n\n            mapInstance.current.on(L.Draw.Event.CREATED, (event) => {\n                const layer = event.layer;\n                drawnItems.addLayer(layer);\n                const coords = layer.getLatLngs()[0].map((point, index) => ({\n                    n_x: point.lng,\n                    n_y: point.lat,\n                    n_z: 0,\n                    n_ord: index + 1\n                }));\n                console.log(\"🖌 Leaflet drawn coordinates (feet):\", coords);\n                onDrawComplete(coords);\n            });\n\n            console.log(\"✅ Leaflet map initialized with bounds:\", mapData.bounds);\n        }\n\n        // Draw parent zone vertices as a non-editable light blue shape\n        if (useLeaflet && mapInstance.current) {\n            if (parentLayer.current) {\n                mapInstance.current.removeLayer(parentLayer.current);\n                parentLayer.current = null;\n            }\n\n            if (parentZoneVertices && parentZoneVertices.length > 0) {\n                console.log(\"📌 Rendering parent zone vertices in Leaflet:\", parentZoneVertices);\n                const latLngs = parentZoneVertices\n                    .map(vertex => {\n                        if (!vertex.x || !vertex.y || isNaN(vertex.x) || isNaN(vertex.y)) {\n                            console.warn(`⚠️ Invalid vertex in parentZoneVertices:`, vertex);\n                            return null;\n                        }\n                        return [vertex.y, vertex.x]; // [lat, lng] for Leaflet\n                    })\n                    .filter(coord => coord !== null);\n                if (latLngs.length > 0) {\n                    parentLayer.current = L.polygon(latLngs, {\n                        color: \"lightblue\",\n                        weight: 2,\n                        fillColor: \"lightblue\",\n                        fillOpacity: 0.3,\n                        interactive: false,\n                    }).addTo(mapInstance.current);\n                    console.log(\"✅ Rendered parent zone shape in Leaflet:\", latLngs);\n                } else {\n                    console.warn(\"⚠️ No valid latLngs to render parent zone in Leaflet\");\n                }\n            } else {\n                console.log(\"ℹ️ No parent zone vertices to render in Leaflet\");\n            }\n        }\n\n        // Cleanup\n        return () => {\n            if (mapInstance.current) {\n                mapInstance.current.remove();\n                mapInstance.current = null;\n                console.log(\"🗺 Leaflet map cleaned up\");\n            }\n        };\n    }, [mapData, useLeaflet, onDrawComplete, triggerColor, drawnItems, parentZoneVertices]);\n\n    return (\n        <div>\n            {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n            {useLeaflet ? (\n                <div ref={mapRef} style={{ height: \"600px\", width: \"800px\", border: \"2px solid black\" }} />\n            ) : (\n                <canvas ref={canvasRef} id=\"map\" style={{ border: \"2px solid black\" }} />\n            )}\n        </div>\n    );\n});\n\nexport default MapZoneBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}