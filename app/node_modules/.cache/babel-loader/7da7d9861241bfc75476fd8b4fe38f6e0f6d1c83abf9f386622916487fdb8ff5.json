{"ast":null,"code":"import React,{useEffect,useRef,useState,memo}from\"react\";import L from\"leaflet\";import\"leaflet/dist/leaflet.css\";// Leaflet core CSS\nimport\"leaflet-draw/dist/leaflet.draw.css\";// Leaflet.Draw CSS\nimport\"leaflet-draw\";// Import Leaflet.Draw\nimport\"./Map.css\";// Canvas styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Map=/*#__PURE__*/memo(_ref=>{let{zoneId,onDrawComplete,triggerColor,useLeaflet}=_ref;const mapRef=useRef(null);const mapInstance=useRef(null);const drawnItems=useRef(new L.FeatureGroup());const canvasRef=useRef(null);const[mapData,setMapData]=useState(null);const[error,setError]=useState(null);const isInitialized=useRef(false);const points=useRef([]);const isDrawing=useRef(false);const ctxRef=useRef(null);const imageRef=useRef(null);const lastClickTime=useRef(0);// For debouncing double-click\n// Fetch map data when zoneId changes\nuseEffect(()=>{if(zoneId&&!mapData){const fetchMapData=async()=>{try{const response=await fetch(`/maps/get_map_data/${zoneId}`);if(!response.ok){const text=await response.text();throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);}const data=await response.json();console.log(\"Map data fetched:\",data);setMapData(data);setError(null);}catch(error){console.error(\"Error fetching map data:\",error);setError(`Error fetching map data: ${error.message}`);}};fetchMapData();}},[zoneId,mapData]);// Canvas rendering logic\nuseEffect(()=>{if(mapData&&canvasRef.current&&!useLeaflet&&!isInitialized.current){const canvas=canvasRef.current;const ctx=canvas.getContext(\"2d\");ctxRef.current=ctx;canvas.width=600;canvas.height=500;const img=new Image();img.crossOrigin=\"anonymous\";img.src=mapData.imageUrl;imageRef.current=img;img.onload=()=>{console.log(\"Canvas: Map image loaded successfully:\",mapData.imageUrl,\"Dimensions:\",img.width,\"x\",img.height);ctx.drawImage(img,0,0,canvas.width,canvas.height);const getCanvasCoordinates=e=>{const rect=canvas.getBoundingClientRect();const scaleX=canvas.width/rect.width;const scaleY=canvas.height/rect.height;const x=(e.clientX-rect.left)*scaleX;const y=(e.clientY-rect.top)*scaleY;console.log(\"Raw click coordinates:\",{x,y});return{x,y};};const drawPolygon=function(points){let currentPoint=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let close=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;ctx.clearRect(0,0,canvas.width,canvas.height);ctx.drawImage(img,0,0,canvas.width,canvas.height);if(points.length===0)return;ctx.beginPath();ctx.moveTo(points[0].x,points[0].y);for(let i=1;i<points.length;i++){ctx.lineTo(points[i].x,points[i].y);}if(currentPoint)ctx.lineTo(currentPoint.x,currentPoint.y);if(close)ctx.closePath();ctx.strokeStyle=triggerColor||\"red\";ctx.stroke();points.forEach(point=>{ctx.beginPath();ctx.arc(point.x,point.y,5,0,Math.PI*2);ctx.fillStyle=triggerColor||\"red\";ctx.fill();ctx.closePath();});};const scalePoints=points=>{const canvasWidth=canvas.width;const canvasHeight=canvas.height;const xMin=-80;const xMax=160;const yMin=-40;const yMax=160;const xRange=xMax-xMin;const yRange=yMax-yMin;return points.map((point,index)=>{const x=xMin+point.x/canvasWidth*xRange;const y=yMax-point.y/canvasHeight*yRange;return{n_x:x,n_y:y,n_z:0,n_ord:index+1};}).filter((point,index,self)=>index===self.findIndex(p=>p.n_x===point.n_x&&p.n_y===point.n_y));};const handleMouseDown=e=>{if(e.button===0){isDrawing.current=true;const point=getCanvasCoordinates(e);if(points.current.length===0||Math.hypot(point.x-points.current[points.current.length-1].x,point.y-points.current[points.current.length-1].y)>5){points.current.push(point);drawPolygon(points.current);}}};const handleMouseMove=e=>{if(isDrawing.current){const point=getCanvasCoordinates(e);drawPolygon(points.current,point);}};const handleMouseUp=e=>{if(e.button===0)isDrawing.current=false;};const handleDoubleClick=e=>{const now=Date.now();if(now-lastClickTime.current<500)return;lastClickTime.current=now;isDrawing.current=false;if(points.current.length>=3){drawPolygon(points.current,null,true);const scaledPoints=scalePoints(points.current);console.log(\"Scaled points (Canvas):\",scaledPoints);if(onDrawComplete)onDrawComplete(JSON.stringify(scaledPoints));points.current=[];}};canvas.addEventListener(\"mousedown\",handleMouseDown);canvas.addEventListener(\"mousemove\",handleMouseMove);canvas.addEventListener(\"mouseup\",handleMouseUp);canvas.addEventListener(\"dblclick\",handleDoubleClick);return()=>{canvas.removeEventListener(\"mousedown\",handleMouseDown);canvas.removeEventListener(\"mousemove\",handleMouseMove);canvas.removeEventListener(\"mouseup\",handleMouseUp);canvas.removeEventListener(\"dblclick\",handleDoubleClick);};};img.onerror=()=>{console.error(\"Failed to load map image:\",mapData.imageUrl);setError(\"Failed to load map image. Please check the server response.\");};}},[mapData,onDrawComplete,triggerColor,useLeaflet]);// Leaflet rendering logic\nuseEffect(()=>{if(mapData&&mapRef.current&&useLeaflet&&!isInitialized.current){mapInstance.current=L.map(mapRef.current,{crs:L.CRS.Simple,minZoom:-5,maxZoom:5,zoomControl:true,attributionControl:false});mapInstance.current.eachLayer(layer=>{if(layer instanceof L.TileLayer)mapInstance.current.removeLayer(layer);});const xMin=mapData.bounds[0][1];// -80\nconst xMax=mapData.bounds[1][1];// 160\nconst yMin=mapData.bounds[0][0];// -40\nconst yMax=mapData.bounds[1][0];// 160\nconst xRange=xMax-xMin;// 240\nconst yRange=yMax-yMin;// 200\nconst img=new Image();img.crossOrigin=\"anonymous\";img.src=mapData.imageUrl;img.onload=()=>{console.log(\"Leaflet: Map image loaded successfully:\",mapData.imageUrl,\"Dimensions:\",img.width,\"x\",img.height);const pixelBounds=[[0,0],// Bottom-left in pixel coordinates\n[600,500]// Top-right in pixel coordinates\n];// Use logical bounds for image overlay\nL.imageOverlay(mapData.imageUrl,[[yMin,xMin],// Bottom-left [-40, -80]\n[yMax,xMax]// Top-right [160, 160]\n]).addTo(mapInstance.current);mapInstance.current.fitBounds([[yMin,xMin],[yMax,xMax]]);mapInstance.current.addLayer(drawnItems.current);const colorMap={red:\"#ff0000\",green:\"#00ff00\",blue:\"#0000ff\"};const drawControl=new L.Control.Draw({edit:{featureGroup:drawnItems.current},draw:{polygon:{shapeOptions:{color:colorMap[triggerColor]||\"#ff0000\",weight:2}},rectangle:false,polyline:false,circle:false,marker:false,circlemarker:false}});mapInstance.current.addControl(drawControl);mapInstance.current.on(L.Draw.Event.CREATED,event=>{const layer=event.layer;drawnItems.current.addLayer(layer);const coords=layer.getLatLngs()[0].map((latLng,index)=>{console.log(`Raw latLng for point ${index+1}:`,{lat:latLng.lat,lng:latLng.lng});// Normalize latLng to pixel bounds and map to logical coordinates\nconst normalizedLat=(latLng.lat-yMin)/yRange;// Normalize to [0, 1]\nconst normalizedLng=(latLng.lng-xMin)/xRange;// Normalize to [0, 1]\nconst x=xMin+normalizedLng*xRange;// Map to [-80, 160]\nconst y=yMin+normalizedLat*yRange;// Map to [-40, 160]\nreturn{n_x:x,n_y:y,n_z:0,n_ord:index+1};});console.log(\"Scaled points (Leaflet):\",coords);if(onDrawComplete)onDrawComplete(JSON.stringify(coords));});isInitialized.current=true;};img.onerror=()=>{console.error(\"Failed to load map image:\",mapData.imageUrl);setError(\"Failed to load map image. Please check the server response.\");};}},[mapData,onDrawComplete,triggerColor,useLeaflet]);// Cleanup\nuseEffect(()=>{return()=>{if(mapInstance.current){mapInstance.current.remove();mapInstance.current=null;isInitialized.current=false;}if(mapData&&imageRef.current){const img=new Image();img.src=mapData.imageUrl;// Clear any pending loads\n}};},[mapData]);if(useLeaflet){return/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\",marginBottom:\"10px\"},children:error}),/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{height:\"500px\",width:\"600px\",border:\"2px solid black\"}})]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\",marginBottom:\"10px\"},children:error}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,id:\"map\",style:{border:\"2px solid black\"}})]});}});export default Map;","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","L","jsx","_jsx","jsxs","_jsxs","Map","_ref","zoneId","onDrawComplete","triggerColor","useLeaflet","mapRef","mapInstance","drawnItems","FeatureGroup","canvasRef","mapData","setMapData","error","setError","isInitialized","points","isDrawing","ctxRef","imageRef","lastClickTime","fetchMapData","response","fetch","ok","text","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","width","height","img","Image","crossOrigin","src","imageUrl","onload","drawImage","getCanvasCoordinates","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","drawPolygon","currentPoint","arguments","length","undefined","close","clearRect","beginPath","moveTo","i","lineTo","closePath","strokeStyle","stroke","forEach","point","arc","Math","PI","fillStyle","fill","scalePoints","canvasWidth","canvasHeight","xMin","xMax","yMin","yMax","xRange","yRange","map","index","n_x","n_y","n_z","n_ord","filter","self","findIndex","p","handleMouseDown","button","hypot","push","handleMouseMove","handleMouseUp","handleDoubleClick","now","Date","scaledPoints","JSON","stringify","addEventListener","removeEventListener","onerror","crs","CRS","Simple","minZoom","maxZoom","zoomControl","attributionControl","eachLayer","layer","TileLayer","removeLayer","bounds","pixelBounds","imageOverlay","addTo","fitBounds","addLayer","colorMap","red","green","blue","drawControl","Control","Draw","edit","featureGroup","draw","polygon","shapeOptions","color","weight","rectangle","polyline","circle","marker","circlemarker","addControl","on","Event","CREATED","event","coords","getLatLngs","latLng","lat","lng","normalizedLat","normalizedLng","remove","children","style","marginBottom","ref","border","id"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // Leaflet.Draw CSS\nimport \"leaflet-draw\"; // Import Leaflet.Draw\nimport \"./Map.css\"; // Canvas styling\n\nconst Map = memo(({ zoneId, onDrawComplete, triggerColor, useLeaflet }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const lastClickTime = useRef(0); // For debouncing double-click\n\n  // Fetch map data when zoneId changes\n  useEffect(() => {\n    if (zoneId && !mapData) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/maps/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"Map data fetched:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId, mapData]);\n\n  // Canvas rendering logic\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n\n      canvas.width = 600;\n      canvas.height = 500;\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n\n      img.onload = () => {\n        console.log(\"Canvas: Map image loaded successfully:\", mapData.imageUrl, \"Dimensions:\", img.width, \"x\", img.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        const getCanvasCoordinates = (e) => {\n          const rect = canvas.getBoundingClientRect();\n          const scaleX = canvas.width / rect.width;\n          const scaleY = canvas.height / rect.height;\n          const x = (e.clientX - rect.left) * scaleX;\n          const y = (e.clientY - rect.top) * scaleY;\n          console.log(\"Raw click coordinates:\", { x, y });\n          return { x, y };\n        };\n\n        const drawPolygon = (points, currentPoint = null, close = false) => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          if (points.length === 0) return;\n          ctx.beginPath();\n          ctx.moveTo(points[0].x, points[0].y);\n          for (let i = 1; i < points.length; i++) {\n            ctx.lineTo(points[i].x, points[i].y);\n          }\n          if (currentPoint) ctx.lineTo(currentPoint.x, currentPoint.y);\n          if (close) ctx.closePath();\n          ctx.strokeStyle = triggerColor || \"red\";\n          ctx.stroke();\n          points.forEach((point) => {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, 5, 0, Math.PI * 2);\n            ctx.fillStyle = triggerColor || \"red\";\n            ctx.fill();\n            ctx.closePath();\n          });\n        };\n\n        const scalePoints = (points) => {\n          const canvasWidth = canvas.width;\n          const canvasHeight = canvas.height;\n          const xMin = -80;\n          const xMax = 160;\n          const yMin = -40;\n          const yMax = 160;\n          const xRange = xMax - xMin;\n          const yRange = yMax - yMin;\n          return points.map((point, index) => {\n            const x = xMin + (point.x / canvasWidth) * xRange;\n            const y = yMax - (point.y / canvasHeight) * yRange;\n            return { n_x: x, n_y: y, n_z: 0, n_ord: index + 1 };\n          }).filter((point, index, self) =>\n            index === self.findIndex((p) => p.n_x === point.n_x && p.n_y === point.n_y)\n          );\n        };\n\n        const handleMouseDown = (e) => {\n          if (e.button === 0) {\n            isDrawing.current = true;\n            const point = getCanvasCoordinates(e);\n            if (points.current.length === 0 || \n                Math.hypot(point.x - points.current[points.current.length - 1].x, \n                          point.y - points.current[points.current.length - 1].y) > 5) {\n              points.current.push(point);\n              drawPolygon(points.current);\n            }\n          }\n        };\n\n        const handleMouseMove = (e) => {\n          if (isDrawing.current) {\n            const point = getCanvasCoordinates(e);\n            drawPolygon(points.current, point);\n          }\n        };\n\n        const handleMouseUp = (e) => {\n          if (e.button === 0) isDrawing.current = false;\n        };\n\n        const handleDoubleClick = (e) => {\n          const now = Date.now();\n          if (now - lastClickTime.current < 500) return;\n          lastClickTime.current = now;\n          isDrawing.current = false;\n          if (points.current.length >= 3) {\n            drawPolygon(points.current, null, true);\n            const scaledPoints = scalePoints(points.current);\n            console.log(\"Scaled points (Canvas):\", scaledPoints);\n            if (onDrawComplete) onDrawComplete(JSON.stringify(scaledPoints));\n            points.current = [];\n          }\n        };\n\n        canvas.addEventListener(\"mousedown\", handleMouseDown);\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseup\", handleMouseUp);\n        canvas.addEventListener(\"dblclick\", handleDoubleClick);\n\n        return () => {\n          canvas.removeEventListener(\"mousedown\", handleMouseDown);\n          canvas.removeEventListener(\"mousemove\", handleMouseMove);\n          canvas.removeEventListener(\"mouseup\", handleMouseUp);\n          canvas.removeEventListener(\"dblclick\", handleDoubleClick);\n        };\n      };\n\n      img.onerror = () => {\n        console.error(\"Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n    }\n  }, [mapData, onDrawComplete, triggerColor, useLeaflet]);\n\n  // Leaflet rendering logic\n  useEffect(() => {\n    if (mapData && mapRef.current && useLeaflet && !isInitialized.current) {\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple,\n        minZoom: -5,\n        maxZoom: 5,\n        zoomControl: true,\n        attributionControl: false,\n      });\n\n      mapInstance.current.eachLayer((layer) => {\n        if (layer instanceof L.TileLayer) mapInstance.current.removeLayer(layer);\n      });\n\n      const xMin = mapData.bounds[0][1]; // -80\n      const xMax = mapData.bounds[1][1]; // 160\n      const yMin = mapData.bounds[0][0]; // -40\n      const yMax = mapData.bounds[1][0]; // 160\n      const xRange = xMax - xMin; // 240\n      const yRange = yMax - yMin; // 200\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n\n      img.onload = () => {\n        console.log(\"Leaflet: Map image loaded successfully:\", mapData.imageUrl, \"Dimensions:\", img.width, \"x\", img.height);\n        const pixelBounds = [\n          [0, 0], // Bottom-left in pixel coordinates\n          [600, 500], // Top-right in pixel coordinates\n        ];\n\n        // Use logical bounds for image overlay\n        L.imageOverlay(mapData.imageUrl, [\n          [yMin, xMin], // Bottom-left [-40, -80]\n          [yMax, xMax], // Top-right [160, 160]\n        ]).addTo(mapInstance.current);\n        mapInstance.current.fitBounds([\n          [yMin, xMin],\n          [yMax, xMax],\n        ]);\n\n        mapInstance.current.addLayer(drawnItems.current);\n\n        const colorMap = {\n          red: \"#ff0000\",\n          green: \"#00ff00\",\n          blue: \"#0000ff\",\n        };\n\n        const drawControl = new L.Control.Draw({\n          edit: { featureGroup: drawnItems.current },\n          draw: {\n            polygon: {\n              shapeOptions: { color: colorMap[triggerColor] || \"#ff0000\", weight: 2 },\n            },\n            rectangle: false,\n            polyline: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n          },\n        });\n        mapInstance.current.addControl(drawControl);\n\n        mapInstance.current.on(L.Draw.Event.CREATED, (event) => {\n          const layer = event.layer;\n          drawnItems.current.addLayer(layer);\n          const coords = layer.getLatLngs()[0].map((latLng, index) => {\n            console.log(`Raw latLng for point ${index + 1}:`, { lat: latLng.lat, lng: latLng.lng });\n            // Normalize latLng to pixel bounds and map to logical coordinates\n            const normalizedLat = (latLng.lat - yMin) / yRange; // Normalize to [0, 1]\n            const normalizedLng = (latLng.lng - xMin) / xRange; // Normalize to [0, 1]\n            const x = xMin + normalizedLng * xRange; // Map to [-80, 160]\n            const y = yMin + normalizedLat * yRange; // Map to [-40, 160]\n            return { n_x: x, n_y: y, n_z: 0, n_ord: index + 1 };\n          });\n          console.log(\"Scaled points (Leaflet):\", coords);\n          if (onDrawComplete) onDrawComplete(JSON.stringify(coords));\n        });\n\n        isInitialized.current = true;\n      };\n\n      img.onerror = () => {\n        console.error(\"Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n    }\n  }, [mapData, onDrawComplete, triggerColor, useLeaflet]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        isInitialized.current = false;\n      }\n      if (mapData && imageRef.current) {\n        const img = new Image();\n        img.src = mapData.imageUrl; // Clear any pending loads\n      }\n    };\n  }, [mapData]);\n\n  if (useLeaflet) {\n    return (\n      <div>\n        {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n        <div ref={mapRef} style={{ height: \"500px\", width: \"600px\", border: \"2px solid black\" }} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n        <canvas ref={canvasRef} id=\"map\" style={{ border: \"2px solid black\" }} />\n      </div>\n    );\n  }\n});\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}