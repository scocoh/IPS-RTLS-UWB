{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // Leaflet.Draw CSS\nimport \"leaflet-draw\"; // Import Leaflet.Draw\nimport \"./Map.css\"; // Canvas styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  zoneId,\n  onDrawComplete,\n  triggerColor,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const lastClickTime = useRef(0); // For debouncing double-click\n\n  // Fetch map data when zoneId changes\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/maps/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"Map data fetched:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // ✅ Canvas Rendering Logic (Restored)\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 500;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      img.onload = () => {\n        console.log(\"Canvas: Map image loaded successfully:\", mapData.imageUrl, \"Dimensions:\", img.width, \"x\", img.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const getCanvasCoordinates = e => {\n          const rect = canvas.getBoundingClientRect();\n          const scaleX = canvas.width / rect.width;\n          const scaleY = canvas.height / rect.height;\n          return {\n            x: (e.clientX - rect.left) * scaleX,\n            y: (e.clientY - rect.top) * scaleY\n          };\n        };\n        const drawPolygon = (points, currentPoint = null, close = false) => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          if (points.length === 0) return;\n          ctx.beginPath();\n          ctx.moveTo(points[0].x, points[0].y);\n          for (let i = 1; i < points.length; i++) {\n            ctx.lineTo(points[i].x, points[i].y);\n          }\n          if (currentPoint) ctx.lineTo(currentPoint.x, currentPoint.y);\n          if (close) ctx.closePath();\n          ctx.strokeStyle = triggerColor || \"red\";\n          ctx.stroke();\n          points.forEach(point => {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, 5, 0, Math.PI * 2);\n            ctx.fillStyle = triggerColor || \"red\";\n            ctx.fill();\n            ctx.closePath();\n          });\n        };\n        const handleMouseDown = e => {\n          if (e.button === 0) {\n            isDrawing.current = true;\n            const point = getCanvasCoordinates(e);\n            points.current.push(point);\n            drawPolygon(points.current);\n          }\n        };\n        const handleMouseMove = e => {\n          if (isDrawing.current) {\n            drawPolygon(points.current, getCanvasCoordinates(e));\n          }\n        };\n        const handleMouseUp = () => {\n          isDrawing.current = false;\n        };\n        const handleDoubleClick = () => {\n          isDrawing.current = false;\n          if (points.current.length >= 3) {\n            drawPolygon(points.current, null, true);\n            if (onDrawComplete) onDrawComplete(JSON.stringify(points.current));\n            points.current = [];\n          }\n        };\n        canvas.addEventListener(\"mousedown\", handleMouseDown);\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseup\", handleMouseUp);\n        canvas.addEventListener(\"dblclick\", handleDoubleClick);\n        return () => {\n          canvas.removeEventListener(\"mousedown\", handleMouseDown);\n          canvas.removeEventListener(\"mousemove\", handleMouseMove);\n          canvas.removeEventListener(\"mouseup\", handleMouseUp);\n          canvas.removeEventListener(\"dblclick\", handleDoubleClick);\n        };\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // ✅ Leaflet Rendering Logic (Fixed Scaling)\n  useEffect(() => {\n    if (mapData && mapRef.current && useLeaflet && !isInitialized.current) {\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple,\n        minZoom: -5,\n        maxZoom: 5,\n        zoomControl: true,\n        attributionControl: false\n      });\n      mapInstance.current.eachLayer(layer => {\n        if (layer instanceof L.TileLayer) mapInstance.current.removeLayer(layer);\n      });\n      const boundsFromApi = [[mapData.bounds[0][0], mapData.bounds[0][1]], [mapData.bounds[1][0], mapData.bounds[1][1]]];\n      L.imageOverlay(mapData.imageUrl, boundsFromApi).addTo(mapInstance.current);\n      mapInstance.current.fitBounds(boundsFromApi);\n      mapInstance.current.addLayer(drawnItems.current);\n      mapInstance.current.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n        if (onDrawComplete) onDrawComplete(JSON.stringify(layer.getLatLngs()[0]));\n      });\n      isInitialized.current = true;\n    }\n  }, [mapData, onDrawComplete, triggerColor, useLeaflet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"500px\",\n        width: \"600px\",\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"map\",\n      style: {\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}, \"EI8l5aLdB35i+ycwhzkIOJMQcdo=\")), \"EI8l5aLdB35i+ycwhzkIOJMQcdo=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"Map$memo\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","L","jsxDEV","_jsxDEV","Map","_s","_c","zoneId","onDrawComplete","triggerColor","useLeaflet","mapRef","mapInstance","drawnItems","FeatureGroup","canvasRef","mapData","setMapData","error","setError","isInitialized","points","isDrawing","ctxRef","imageRef","lastClickTime","fetchMapData","response","fetch","ok","text","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","width","height","img","Image","crossOrigin","src","imageUrl","onload","drawImage","getCanvasCoordinates","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","drawPolygon","currentPoint","close","clearRect","length","beginPath","moveTo","i","lineTo","closePath","strokeStyle","stroke","forEach","point","arc","Math","PI","fillStyle","fill","handleMouseDown","button","push","handleMouseMove","handleMouseUp","handleDoubleClick","JSON","stringify","addEventListener","removeEventListener","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","attributionControl","eachLayer","layer","TileLayer","removeLayer","boundsFromApi","bounds","imageOverlay","addTo","fitBounds","addLayer","on","Draw","Event","CREATED","event","getLatLngs","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","id","_c2","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // Leaflet.Draw CSS\nimport \"leaflet-draw\"; // Import Leaflet.Draw\nimport \"./Map.css\"; // Canvas styling\n\nconst Map = memo(({ zoneId, onDrawComplete, triggerColor, useLeaflet }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]);\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const lastClickTime = useRef(0); // For debouncing double-click\n\n  // Fetch map data when zoneId changes\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/maps/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"Map data fetched:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // ✅ Canvas Rendering Logic (Restored)\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n\n      canvas.width = 600;\n      canvas.height = 500;\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n\n      img.onload = () => {\n        console.log(\"Canvas: Map image loaded successfully:\", mapData.imageUrl, \"Dimensions:\", img.width, \"x\", img.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        const getCanvasCoordinates = (e) => {\n          const rect = canvas.getBoundingClientRect();\n          const scaleX = canvas.width / rect.width;\n          const scaleY = canvas.height / rect.height;\n          return { x: (e.clientX - rect.left) * scaleX, y: (e.clientY - rect.top) * scaleY };\n        };\n\n        const drawPolygon = (points, currentPoint = null, close = false) => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          if (points.length === 0) return;\n          ctx.beginPath();\n          ctx.moveTo(points[0].x, points[0].y);\n          for (let i = 1; i < points.length; i++) {\n            ctx.lineTo(points[i].x, points[i].y);\n          }\n          if (currentPoint) ctx.lineTo(currentPoint.x, currentPoint.y);\n          if (close) ctx.closePath();\n          ctx.strokeStyle = triggerColor || \"red\";\n          ctx.stroke();\n          points.forEach((point) => {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, 5, 0, Math.PI * 2);\n            ctx.fillStyle = triggerColor || \"red\";\n            ctx.fill();\n            ctx.closePath();\n          });\n        };\n\n        const handleMouseDown = (e) => {\n          if (e.button === 0) {\n            isDrawing.current = true;\n            const point = getCanvasCoordinates(e);\n            points.current.push(point);\n            drawPolygon(points.current);\n          }\n        };\n\n        const handleMouseMove = (e) => {\n          if (isDrawing.current) {\n            drawPolygon(points.current, getCanvasCoordinates(e));\n          }\n        };\n\n        const handleMouseUp = () => {\n          isDrawing.current = false;\n        };\n\n        const handleDoubleClick = () => {\n          isDrawing.current = false;\n          if (points.current.length >= 3) {\n            drawPolygon(points.current, null, true);\n            if (onDrawComplete) onDrawComplete(JSON.stringify(points.current));\n            points.current = [];\n          }\n        };\n\n        canvas.addEventListener(\"mousedown\", handleMouseDown);\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseup\", handleMouseUp);\n        canvas.addEventListener(\"dblclick\", handleDoubleClick);\n\n        return () => {\n          canvas.removeEventListener(\"mousedown\", handleMouseDown);\n          canvas.removeEventListener(\"mousemove\", handleMouseMove);\n          canvas.removeEventListener(\"mouseup\", handleMouseUp);\n          canvas.removeEventListener(\"dblclick\", handleDoubleClick);\n        };\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // ✅ Leaflet Rendering Logic (Fixed Scaling)\n  useEffect(() => {\n    if (mapData && mapRef.current && useLeaflet && !isInitialized.current) {\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple,\n        minZoom: -5,\n        maxZoom: 5,\n        zoomControl: true,\n        attributionControl: false,\n      });\n\n      mapInstance.current.eachLayer((layer) => {\n        if (layer instanceof L.TileLayer) mapInstance.current.removeLayer(layer);\n      });\n\n      const boundsFromApi = [\n        [mapData.bounds[0][0], mapData.bounds[0][1]],\n        [mapData.bounds[1][0], mapData.bounds[1][1]],\n      ];\n\n      L.imageOverlay(mapData.imageUrl, boundsFromApi).addTo(mapInstance.current);\n      mapInstance.current.fitBounds(boundsFromApi);\n\n      mapInstance.current.addLayer(drawnItems.current);\n\n      mapInstance.current.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n        if (onDrawComplete) onDrawComplete(JSON.stringify(layer.getLatLngs()[0]));\n      });\n\n      isInitialized.current = true;\n    }\n  }, [mapData, onDrawComplete, triggerColor, useLeaflet]);\n\n  return (\n    <div>\n      {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n      {useLeaflet ? (\n        <div ref={mapRef} style={{ height: \"500px\", width: \"600px\", border: \"2px solid black\" }} />\n      ) : (\n        <canvas ref={canvasRef} id=\"map\" style={{ border: \"2px solid black\" }} />\n      )}\n    </div>\n  );\n});\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}