{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBuildOut = ({\n  zoneId,\n  onDrawComplete,\n  devices,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const canvasBounds = useRef({\n    x: 0,\n    y: 0,\n    width: 600,\n    height: 400\n  });\n\n  // Fetch map data\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n          const data = await response.json();\n          console.log(\"✅ Fetched map data:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // Canvas rendering\n  useEffect(() => {\n    if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n      console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n      console.log(\"Devices:\", devices);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 400;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1]; // x_max - x_min (feet)\n      const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0]; // y_max - y_min (feet)\n\n      img.onload = () => {\n        const mapAspect = mapWidth / mapHeight;\n        const canvasAspect = canvas.width / canvas.height;\n        let drawWidth = canvas.width;\n        let drawHeight = canvas.height;\n        let offsetX = 0;\n        let offsetY = 0;\n        if (mapAspect > canvasAspect) {\n          drawHeight = canvas.width / mapAspect;\n          offsetY = (canvas.height - drawHeight) / 2;\n        } else {\n          drawWidth = canvas.height * mapAspect;\n          offsetX = (canvas.width - drawWidth) / 2;\n        }\n        canvasBounds.current = {\n          x: offsetX,\n          y: offsetY,\n          width: drawWidth,\n          height: drawHeight\n        };\n        drawCanvas();\n      };\n      img.onerror = () => {\n        setError(\"Failed to load map image.\");\n      };\n      const drawCanvas = () => {\n        if (!ctxRef.current || !imageRef.current) return;\n        const ctx = ctxRef.current;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n        if (devices && Array.isArray(devices)) {\n          devices.forEach(d => {\n            if (d.n_moe_x != null && d.n_moe_y != null) {\n              const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n              const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight);\n              console.log(`Drawing device ${d.x_id_dev} at (${xPixel}, ${yPixel})`);\n              ctx.fillStyle = \"red\";\n              ctx.beginPath();\n              ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n              ctx.fill();\n              ctx.fillStyle = \"black\";\n              ctx.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n            }\n          });\n        }\n      };\n      canvas.onclick = e => {\n        const rect = canvas.getBoundingClientRect();\n        const xPixel = e.clientX - rect.left;\n        const yPixel = e.clientY - rect.top;\n        const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n        const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height);\n        console.log(`Canvas click at (${xFeet}, ${yFeet})`);\n        onDrawComplete({\n          n_x: xFeet,\n          n_y: yFeet\n        });\n        if (ctxRef.current) {\n          const ctx = ctxRef.current;\n          ctx.fillStyle = \"red\";\n          ctx.beginPath();\n          ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n          ctx.fill();\n        }\n      };\n      isInitialized.current = true;\n      img.onload(); // Trigger initial draw\n      return () => {\n        isInitialized.current = false;\n      };\n    }\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n  // Leaflet rendering\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n      console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n      console.log(\"Devices:\", devices);\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple,\n        dragging: true\n      }).fitBounds(mapData.bounds);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      mapInstance.current.on(\"click\", e => {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        console.log(`Leaflet click at (${lng}, ${lat})`);\n        onDrawComplete({\n          n_x: lng,\n          n_y: lat\n        });\n        L.marker([lat, lng]).addTo(mapInstance.current);\n      });\n      if (devices && Array.isArray(devices)) {\n        devices.forEach(d => {\n          if (d.n_moe_x != null && d.n_moe_y != null) {\n            console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n            L.marker([d.n_moe_y, d.n_moe_x]).addTo(mapInstance.current).bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n          }\n        });\n      }\n    }\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"400px\",\n        width: \"600px\",\n        border: \"2px solid black\",\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: \"2px solid black\",\n        cursor: \"pointer\"\n      },\n      width: \"600\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(MapBuildOut, \"ElnveAgujnZXVX4WdY8YTFJ6NrQ=\");\n_c = MapBuildOut;\nexport default MapBuildOut;\nvar _c;\n$RefreshReg$(_c, \"MapBuildOut\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapBuildOut","zoneId","onDrawComplete","devices","useLeaflet","_s","mapRef","mapInstance","canvasRef","mapData","setMapData","error","setError","isInitialized","ctxRef","imageRef","canvasBounds","x","y","width","height","fetchMapData","response","fetch","ok","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","img","Image","crossOrigin","src","imageUrl","mapWidth","bounds","mapHeight","onload","mapAspect","canvasAspect","drawWidth","drawHeight","offsetX","offsetY","drawCanvas","onerror","clearRect","drawImage","Array","isArray","forEach","d","n_moe_x","n_moe_y","xPixel","yPixel","x_id_dev","fillStyle","beginPath","arc","Math","PI","fill","fillText","x_nm_dev","onclick","e","rect","getBoundingClientRect","clientX","left","clientY","top","xFeet","yFeet","n_x","n_y","map","crs","CRS","Simple","dragging","fitBounds","imageOverlay","addTo","on","lat","lng","latlng","marker","bindPopup","remove","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","cursor","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapBuildOut = ({ zoneId, onDrawComplete, devices, useLeaflet }) => {\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n    const canvasRef = useRef(null);\n    const [mapData, setMapData] = useState(null);\n    const [error, setError] = useState(null);\n    const isInitialized = useRef(false);\n    const ctxRef = useRef(null);\n    const imageRef = useRef(null);\n    const canvasBounds = useRef({ x: 0, y: 0, width: 600, height: 400 });\n\n    // Fetch map data\n    useEffect(() => {\n        if (zoneId) {\n            const fetchMapData = async () => {\n                try {\n                    const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n                    const data = await response.json();\n                    console.log(\"✅ Fetched map data:\", data);\n                    setMapData(data);\n                    setError(null);\n                } catch (error) {\n                    console.error(\"❌ Error fetching map data:\", error);\n                    setError(`Error fetching map data: ${error.message}`);\n                }\n            };\n            fetchMapData();\n        }\n    }, [zoneId]);\n\n    // Canvas rendering\n    useEffect(() => {\n        if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n            console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n            console.log(\"Devices:\", devices);\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctxRef.current = ctx;\n\n            canvas.width = 600;\n            canvas.height = 400;\n\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.src = mapData.imageUrl;\n            imageRef.current = img;\n\n            const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1]; // x_max - x_min (feet)\n            const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0]; // y_max - y_min (feet)\n\n            img.onload = () => {\n                const mapAspect = mapWidth / mapHeight;\n                const canvasAspect = canvas.width / canvas.height;\n                let drawWidth = canvas.width;\n                let drawHeight = canvas.height;\n                let offsetX = 0;\n                let offsetY = 0;\n\n                if (mapAspect > canvasAspect) {\n                    drawHeight = canvas.width / mapAspect;\n                    offsetY = (canvas.height - drawHeight) / 2;\n                } else {\n                    drawWidth = canvas.height * mapAspect;\n                    offsetX = (canvas.width - drawWidth) / 2;\n                }\n\n                canvasBounds.current = { x: offsetX, y: offsetY, width: drawWidth, height: drawHeight };\n                drawCanvas();\n            };\n\n            img.onerror = () => {\n                setError(\"Failed to load map image.\");\n            };\n\n            const drawCanvas = () => {\n                if (!ctxRef.current || !imageRef.current) return;\n                const ctx = ctxRef.current;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n\n                if (devices && Array.isArray(devices)) {\n                    devices.forEach(d => {\n                        if (d.n_moe_x != null && d.n_moe_y != null) {\n                            const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n                            const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight);\n                            console.log(`Drawing device ${d.x_id_dev} at (${xPixel}, ${yPixel})`);\n                            ctx.fillStyle = \"red\";\n                            ctx.beginPath();\n                            ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                            ctx.fill();\n                            ctx.fillStyle = \"black\";\n                            ctx.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n                        }\n                    });\n                }\n            };\n\n            canvas.onclick = (e) => {\n                const rect = canvas.getBoundingClientRect();\n                const xPixel = e.clientX - rect.left;\n                const yPixel = e.clientY - rect.top;\n                const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n                const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height);\n                console.log(`Canvas click at (${xFeet}, ${yFeet})`);\n                onDrawComplete({ n_x: xFeet, n_y: yFeet });\n                if (ctxRef.current) {\n                    const ctx = ctxRef.current;\n                    ctx.fillStyle = \"red\";\n                    ctx.beginPath();\n                    ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                    ctx.fill();\n                }\n            };\n\n            isInitialized.current = true;\n            img.onload(); // Trigger initial draw\n            return () => {\n                isInitialized.current = false;\n            };\n        }\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    // Leaflet rendering\n    useEffect(() => {\n        if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n            console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n            console.log(\"Devices:\", devices);\n            mapInstance.current = L.map(mapRef.current, { \n                crs: L.CRS.Simple, \n                dragging: true \n            }).fitBounds(mapData.bounds);\n            L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n\n            mapInstance.current.on(\"click\", (e) => {\n                const { lat, lng } = e.latlng;\n                console.log(`Leaflet click at (${lng}, ${lat})`);\n                onDrawComplete({ n_x: lng, n_y: lat });\n                L.marker([lat, lng]).addTo(mapInstance.current);\n            });\n\n            if (devices && Array.isArray(devices)) {\n                devices.forEach(d => {\n                    if (d.n_moe_x != null && d.n_moe_y != null) {\n                        console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n                        L.marker([d.n_moe_y, d.n_moe_x])\n                            .addTo(mapInstance.current)\n                            .bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n                    }\n                });\n            }\n        }\n\n        return () => {\n            if (mapInstance.current) {\n                mapInstance.current.remove();\n                mapInstance.current = null;\n            }\n        };\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    return (\n        <div>\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\n            {useLeaflet ? (\n                <div ref={mapRef} style={{ height: \"400px\", width: \"600px\", border: \"2px solid black\", cursor: \"pointer\" }} />\n            ) : (\n                <canvas ref={canvasRef} style={{ border: \"2px solid black\", cursor: \"pointer\" }} width=\"600\" height=\"400\" />\n            )}\n        </div>\n    );\n};\n\nexport default MapBuildOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}