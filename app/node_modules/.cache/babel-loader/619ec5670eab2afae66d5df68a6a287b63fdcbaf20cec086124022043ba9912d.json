{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/CreateTrigger.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTrigger = ({\n  onTriggerCreated\n}) => {\n  _s();\n  const [triggerName, setTriggerName] = useState(\"\");\n  const [selectedZone, setSelectedZone] = useState(\"\");\n  const [zones, setZones] = useState([]);\n  useEffect(() => {\n    fetch(\"/maps/get_campus_zones\") // Adjust to fetch zones for a selected map\n    .then(response => response.json()).then(data => setZones(data.zones || [])).catch(error => console.error(\"Error fetching zones:\", error));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const triggerData = {\n      name: triggerName,\n      zone_id: selectedZone\n    };\n    const response = await fetch(\"/api/add_trigger\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(triggerData)\n    });\n    if (response.ok) {\n      const result = await response.json();\n      if (onTriggerCreated) onTriggerCreated(result.trigger_id);\n      alert(`Trigger created with ID: ${result.trigger_id}`);\n    } else {\n      alert(\"Error creating trigger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Trigger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: triggerName,\n          onChange: e => setTriggerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Zone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedZone,\n          onChange: e => setSelectedZone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: zone.zone_id,\n            children: zone.zone_name\n          }, zone.zone_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Trigger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTrigger, \"u6ba02Tv70rjt+0h8u9urXjrDOE=\");\n_c = CreateTrigger;\nexport default CreateTrigger;\nvar _c;\n$RefreshReg$(_c, \"CreateTrigger\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateTrigger","onTriggerCreated","_s","triggerName","setTriggerName","selectedZone","setSelectedZone","zones","setZones","fetch","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","triggerData","name","zone_id","method","headers","body","JSON","stringify","ok","result","trigger_id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","zone","zone_name","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/CreateTrigger.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst CreateTrigger = ({ onTriggerCreated }) => {\n  const [triggerName, setTriggerName] = useState(\"\");\n  const [selectedZone, setSelectedZone] = useState(\"\");\n  const [zones, setZones] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/maps/get_campus_zones\") // Adjust to fetch zones for a selected map\n      .then((response) => response.json())\n      .then((data) => setZones(data.zones || []))\n      .catch((error) => console.error(\"Error fetching zones:\", error));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const triggerData = { name: triggerName, zone_id: selectedZone };\n    const response = await fetch(\"/api/add_trigger\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(triggerData),\n    });\n    if (response.ok) {\n      const result = await response.json();\n      if (onTriggerCreated) onTriggerCreated(result.trigger_id);\n      alert(`Trigger created with ID: ${result.trigger_id}`);\n    } else {\n      alert(\"Error creating trigger\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Trigger</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" value={triggerName} onChange={(e) => setTriggerName(e.target.value)} />\n        </div>\n        <div>\n          <label>Zone:</label>\n          <select value={selectedZone} onChange={(e) => setSelectedZone(e.target.value)}>\n            <option value=\"\">Select Zone</option>\n            {zones.map((zone) => (\n              <option key={zone.zone_id} value={zone.zone_id}>\n                {zone.zone_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button type=\"submit\">Create Trigger</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTrigger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}