{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetchData = endpoints => {\n  _s();\n  const [data, setData] = useState({\n    maps: [],\n    parentZones: [],\n    triggerDirections: [],\n    zones: []\n  });\n  const [loading, setLoading] = useState({});\n  const [error, setError] = useState(null);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const results = {};\n      for (const key in endpoints) {\n        const response = await fetch(endpoints[key]);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const jsonData = await response.json();\n        results[key] = jsonData || []; // Ensuring default empty array\n      }\n      setData(results);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    data,\n    loading,\n    error,\n    fetchData\n  };\n};\n_s(useFetchData, \"GoRppSPa2jwY9FOEREwTWW7/YeU=\");\nexport default useFetchData;","map":{"version":3,"names":["useState","useEffect","useFetchData","endpoints","_s","data","setData","maps","parentZones","triggerDirections","zones","loading","setLoading","error","setError","fetchData","results","key","response","fetch","ok","Error","status","jsonData","json","err","console","message"],"sources":["/home/parcoadmin/parco_fastapi/app/src/hooks/useFetchData.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetchData = (endpoints) => {\n  const [data, setData] = useState({\n    maps: [],\n    parentZones: [],\n    triggerDirections: [],\n    zones: [],\n  });\n  const [loading, setLoading] = useState({});\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const results = {};\n      for (const key in endpoints) {\n        const response = await fetch(endpoints[key]);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const jsonData = await response.json();\n        results[key] = jsonData || []; // Ensuring default empty array\n      }\n      setData(results);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { data, loading, error, fetchData };\n};\n\nexport default useFetchData;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,iBAAiB,EAAE,EAAE;IACrBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,OAAO,GAAG,CAAC,CAAC;MAClB,KAAK,MAAMC,GAAG,IAAId,SAAS,EAAE;QAC3B,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAChB,SAAS,CAACc,GAAG,CAAC,CAAC;QAC5C,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACtCR,OAAO,CAACC,GAAG,CAAC,GAAGM,QAAQ,IAAI,EAAE,CAAC,CAAC;MACjC;MACAjB,OAAO,CAACU,OAAO,CAAC;MAChBF,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACb,KAAK,CAAC,sBAAsB,EAAEY,GAAG,CAAC;MAC1CX,QAAQ,CAACW,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEV,IAAI;IAAEM,OAAO;IAAEE,KAAK;IAAEE;EAAU,CAAC;AAC5C,CAAC;AAACX,EAAA,CArCIF,YAAY;AAuClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}