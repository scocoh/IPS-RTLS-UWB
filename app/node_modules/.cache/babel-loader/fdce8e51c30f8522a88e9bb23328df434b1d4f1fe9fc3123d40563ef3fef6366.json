{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBuildOut = ({\n  zoneId,\n  onDrawComplete,\n  devices,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const canvasBounds = useRef({\n    x: 0,\n    y: 0,\n    width: 600,\n    height: 400\n  });\n\n  // Fetch map data\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n          const data = await response.json();\n          console.log(\"✅ Fetched map data:\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // Canvas rendering\n  useEffect(() => {\n    if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n      console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 400;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      img.onload = () => {\n        const mapAspect = (mapData.bounds[1][1] - mapData.bounds[0][1]) / (mapData.bounds[1][0] - mapData.bounds[0][0]);\n        const canvasAspect = canvas.width / canvas.height;\n        let drawWidth = canvas.width;\n        let drawHeight = canvas.height;\n        let offsetX = 0;\n        let offsetY = 0;\n        if (mapAspect > canvasAspect) {\n          drawHeight = canvas.width / mapAspect;\n          offsetY = (canvas.height - drawHeight) / 2;\n        } else {\n          drawWidth = canvas.height * mapAspect;\n          offsetX = (canvas.width - drawWidth) / 2;\n        }\n        canvasBounds.current = {\n          x: offsetX,\n          y: offsetY,\n          width: drawWidth,\n          height: drawHeight\n        };\n        drawCanvas();\n      };\n      img.onerror = () => {\n        setError(\"Failed to load map image.\");\n      };\n      const drawCanvas = () => {\n        if (!ctxRef.current || !imageRef.current) return;\n        const ctx = ctxRef.current;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n        const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1]; // x_max - x_min (feet)\n        const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0]; // y_max - y_min (feet)\n\n        devices.forEach(d => {\n          if (d.n_moe_x && d.n_moe_y) {\n            const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n            const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight); // Flip Y\n            ctx.fillStyle = \"red\";\n            ctx.beginPath();\n            ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.fillStyle = \"black\";\n            ctx.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n          }\n        });\n        canvas.onclick = e => {\n          const rect = canvas.getBoundingClientRect();\n          const xPixel = e.clientX - rect.left;\n          const yPixel = e.clientY - rect.top;\n          const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n          const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height); // Flip Y\n          onDrawComplete({\n            n_x: xFeet,\n            n_y: yFeet\n          });\n          ctx.fillStyle = \"red\";\n          ctx.beginPath();\n          ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n          ctx.fill();\n        };\n      };\n      isInitialized.current = true;\n      return () => {\n        isInitialized.current = false;\n      };\n    }\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n  // Leaflet rendering\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n      console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple\n      }).fitBounds(mapData.bounds);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      mapInstance.current.on(\"click\", e => {\n        const {\n          lat,\n          lng\n        } = e.latlng; // lat = y, lng = x in feet\n        onDrawComplete({\n          n_x: lng,\n          n_y: lat\n        });\n        L.marker([lat, lng]).addTo(mapInstance.current);\n      });\n      devices.forEach(d => {\n        if (d.n_moe_x && d.n_moe_y) {\n          L.marker([d.n_moe_y, d.n_moe_x]).addTo(mapInstance.current).bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n        }\n      });\n    }\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"400px\",\n        width: \"600px\",\n        border: \"2px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: \"2px solid black\"\n      },\n      width: \"600\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(MapBuildOut, \"ElnveAgujnZXVX4WdY8YTFJ6NrQ=\");\n_c = MapBuildOut;\nexport default MapBuildOut;\nvar _c;\n$RefreshReg$(_c, \"MapBuildOut\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapBuildOut","zoneId","onDrawComplete","devices","useLeaflet","_s","mapRef","mapInstance","canvasRef","mapData","setMapData","error","setError","isInitialized","ctxRef","imageRef","canvasBounds","x","y","width","height","fetchMapData","response","fetch","ok","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","img","Image","crossOrigin","src","imageUrl","onload","mapAspect","bounds","canvasAspect","drawWidth","drawHeight","offsetX","offsetY","drawCanvas","onerror","clearRect","drawImage","mapWidth","mapHeight","forEach","d","n_moe_x","n_moe_y","xPixel","yPixel","fillStyle","beginPath","arc","Math","PI","fill","fillText","x_id_dev","x_nm_dev","onclick","e","rect","getBoundingClientRect","clientX","left","clientY","top","xFeet","yFeet","n_x","n_y","map","crs","CRS","Simple","fitBounds","imageOverlay","addTo","on","lat","lng","latlng","marker","bindPopup","remove","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapBuildOut = ({ zoneId, onDrawComplete, devices, useLeaflet }) => {\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n    const canvasRef = useRef(null);\n    const [mapData, setMapData] = useState(null);\n    const [error, setError] = useState(null);\n    const isInitialized = useRef(false);\n    const ctxRef = useRef(null);\n    const imageRef = useRef(null);\n    const canvasBounds = useRef({ x: 0, y: 0, width: 600, height: 400 });\n\n    // Fetch map data\n    useEffect(() => {\n        if (zoneId) {\n            const fetchMapData = async () => {\n                try {\n                    const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n                    const data = await response.json();\n                    console.log(\"✅ Fetched map data:\", data);\n                    setMapData(data);\n                    setError(null);\n                } catch (error) {\n                    console.error(\"❌ Error fetching map data:\", error);\n                    setError(`Error fetching map data: ${error.message}`);\n                }\n            };\n            fetchMapData();\n        }\n    }, [zoneId]);\n\n    // Canvas rendering\n    useEffect(() => {\n        if (!useLeaflet && mapData && canvasRef.current && !isInitialized.current) {\n            console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctxRef.current = ctx;\n\n            canvas.width = 600;\n            canvas.height = 400;\n\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.src = mapData.imageUrl;\n            imageRef.current = img;\n\n            img.onload = () => {\n                const mapAspect = (mapData.bounds[1][1] - mapData.bounds[0][1]) / (mapData.bounds[1][0] - mapData.bounds[0][0]);\n                const canvasAspect = canvas.width / canvas.height;\n                let drawWidth = canvas.width;\n                let drawHeight = canvas.height;\n                let offsetX = 0;\n                let offsetY = 0;\n\n                if (mapAspect > canvasAspect) {\n                    drawHeight = canvas.width / mapAspect;\n                    offsetY = (canvas.height - drawHeight) / 2;\n                } else {\n                    drawWidth = canvas.height * mapAspect;\n                    offsetX = (canvas.width - drawWidth) / 2;\n                }\n\n                canvasBounds.current = { x: offsetX, y: offsetY, width: drawWidth, height: drawHeight };\n                drawCanvas();\n            };\n\n            img.onerror = () => {\n                setError(\"Failed to load map image.\");\n            };\n\n            const drawCanvas = () => {\n                if (!ctxRef.current || !imageRef.current) return;\n                const ctx = ctxRef.current;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n\n                const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1]; // x_max - x_min (feet)\n                const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0]; // y_max - y_min (feet)\n\n                devices.forEach(d => {\n                    if (d.n_moe_x && d.n_moe_y) {\n                        const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n                        const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight); // Flip Y\n                        ctx.fillStyle = \"red\";\n                        ctx.beginPath();\n                        ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                        ctx.fill();\n                        ctx.fillStyle = \"black\";\n                        ctx.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n                    }\n                });\n\n                canvas.onclick = (e) => {\n                    const rect = canvas.getBoundingClientRect();\n                    const xPixel = e.clientX - rect.left;\n                    const yPixel = e.clientY - rect.top;\n                    const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n                    const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height); // Flip Y\n                    onDrawComplete({ n_x: xFeet, n_y: yFeet });\n                    ctx.fillStyle = \"red\";\n                    ctx.beginPath();\n                    ctx.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                    ctx.fill();\n                };\n            };\n\n            isInitialized.current = true;\n            return () => {\n                isInitialized.current = false;\n            };\n        }\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    // Leaflet rendering\n    useEffect(() => {\n        if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n            console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n            mapInstance.current = L.map(mapRef.current, { crs: L.CRS.Simple }).fitBounds(mapData.bounds);\n            L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n\n            mapInstance.current.on(\"click\", (e) => {\n                const { lat, lng } = e.latlng; // lat = y, lng = x in feet\n                onDrawComplete({ n_x: lng, n_y: lat });\n                L.marker([lat, lng]).addTo(mapInstance.current);\n            });\n\n            devices.forEach(d => {\n                if (d.n_moe_x && d.n_moe_y) {\n                    L.marker([d.n_moe_y, d.n_moe_x])\n                        .addTo(mapInstance.current)\n                        .bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`);\n                }\n            });\n        }\n\n        return () => {\n            if (mapInstance.current) {\n                mapInstance.current.remove();\n                mapInstance.current = null;\n            }\n        };\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    return (\n        <div>\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\n            {useLeaflet ? (\n                <div ref={mapRef} style={{ height: \"400px\", width: \"600px\", border: \"2px solid black\" }} />\n            ) : (\n                <canvas ref={canvasRef} style={{ border: \"2px solid black\" }} width=\"600\" height=\"400\" />\n            )}\n        </div>\n    );\n};\n\nexport default MapBuildOut;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAMC,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMY,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMa,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMiB,aAAa,GAAGlB,MAAM,CAAC,KAAK,CAAC;EACnC,MAAMmB,MAAM,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMoB,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMqB,YAAY,GAAGrB,MAAM,CAAC;IAAEsB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;;EAEpE;EACA1B,SAAS,CAAC,MAAM;IACZ,IAAIO,MAAM,EAAE;MACR,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BtB,MAAM,EAAE,CAAC;UACnE,IAAI,CAACqB,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;UAC3E,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC;UACxCjB,UAAU,CAACiB,IAAI,CAAC;UAChBf,QAAQ,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;UACZkB,OAAO,CAAClB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDC,QAAQ,CAAC,4BAA4BD,KAAK,CAACoB,OAAO,EAAE,CAAC;QACzD;MACJ,CAAC;MACDV,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC,EAAE,CAACpB,MAAM,CAAC,CAAC;;EAEZ;EACAP,SAAS,CAAC,MAAM;IACZ,IAAI,CAACU,UAAU,IAAIK,OAAO,IAAID,SAAS,CAACwB,OAAO,IAAI,CAACnB,aAAa,CAACmB,OAAO,EAAE;MACvEH,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAErB,OAAO,CAAC;MACtE,MAAMwB,MAAM,GAAGzB,SAAS,CAACwB,OAAO;MAChC,MAAME,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACnC,IAAI,CAACD,GAAG,EAAE;MACVpB,MAAM,CAACkB,OAAO,GAAGE,GAAG;MAEpBD,MAAM,CAACd,KAAK,GAAG,GAAG;MAClBc,MAAM,CAACb,MAAM,GAAG,GAAG;MAEnB,MAAMgB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,WAAW,GAAG,WAAW;MAC7BF,GAAG,CAACG,GAAG,GAAG9B,OAAO,CAAC+B,QAAQ;MAC1BzB,QAAQ,CAACiB,OAAO,GAAGI,GAAG;MAEtBA,GAAG,CAACK,MAAM,GAAG,MAAM;QACf,MAAMC,SAAS,GAAG,CAACjC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGlC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKlC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGlC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/G,MAAMC,YAAY,GAAGX,MAAM,CAACd,KAAK,GAAGc,MAAM,CAACb,MAAM;QACjD,IAAIyB,SAAS,GAAGZ,MAAM,CAACd,KAAK;QAC5B,IAAI2B,UAAU,GAAGb,MAAM,CAACb,MAAM;QAC9B,IAAI2B,OAAO,GAAG,CAAC;QACf,IAAIC,OAAO,GAAG,CAAC;QAEf,IAAIN,SAAS,GAAGE,YAAY,EAAE;UAC1BE,UAAU,GAAGb,MAAM,CAACd,KAAK,GAAGuB,SAAS;UACrCM,OAAO,GAAG,CAACf,MAAM,CAACb,MAAM,GAAG0B,UAAU,IAAI,CAAC;QAC9C,CAAC,MAAM;UACHD,SAAS,GAAGZ,MAAM,CAACb,MAAM,GAAGsB,SAAS;UACrCK,OAAO,GAAG,CAACd,MAAM,CAACd,KAAK,GAAG0B,SAAS,IAAI,CAAC;QAC5C;QAEA7B,YAAY,CAACgB,OAAO,GAAG;UAAEf,CAAC,EAAE8B,OAAO;UAAE7B,CAAC,EAAE8B,OAAO;UAAE7B,KAAK,EAAE0B,SAAS;UAAEzB,MAAM,EAAE0B;QAAW,CAAC;QACvFG,UAAU,CAAC,CAAC;MAChB,CAAC;MAEDb,GAAG,CAACc,OAAO,GAAG,MAAM;QAChBtC,QAAQ,CAAC,2BAA2B,CAAC;MACzC,CAAC;MAED,MAAMqC,UAAU,GAAGA,CAAA,KAAM;QACrB,IAAI,CAACnC,MAAM,CAACkB,OAAO,IAAI,CAACjB,QAAQ,CAACiB,OAAO,EAAE;QAC1C,MAAME,GAAG,GAAGpB,MAAM,CAACkB,OAAO;QAC1BE,GAAG,CAACiB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACd,KAAK,EAAEc,MAAM,CAACb,MAAM,CAAC;QAChDc,GAAG,CAACkB,SAAS,CAACrC,QAAQ,CAACiB,OAAO,EAAEhB,YAAY,CAACgB,OAAO,CAACf,CAAC,EAAED,YAAY,CAACgB,OAAO,CAACd,CAAC,EAAEF,YAAY,CAACgB,OAAO,CAACb,KAAK,EAAEH,YAAY,CAACgB,OAAO,CAACZ,MAAM,CAAC;QAExI,MAAMiC,QAAQ,GAAG5C,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGlC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAMW,SAAS,GAAG7C,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGlC,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE/DxC,OAAO,CAACoD,OAAO,CAACC,CAAC,IAAI;UACjB,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,OAAO,EAAE;YACxB,MAAMC,MAAM,GAAG3C,YAAY,CAACgB,OAAO,CAACf,CAAC,GAAG,CAACuC,CAAC,CAACC,OAAO,GAAGhD,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK3B,YAAY,CAACgB,OAAO,CAACb,KAAK,GAAGkC,QAAQ,CAAC;YACpH,MAAMO,MAAM,GAAG5C,YAAY,CAACgB,OAAO,CAACd,CAAC,GAAG,CAACT,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGa,CAAC,CAACE,OAAO,KAAK1C,YAAY,CAACgB,OAAO,CAACZ,MAAM,GAAGkC,SAAS,CAAC,CAAC,CAAC;YACxHpB,GAAG,CAAC2B,SAAS,GAAG,KAAK;YACrB3B,GAAG,CAAC4B,SAAS,CAAC,CAAC;YACf5B,GAAG,CAAC6B,GAAG,CAACJ,MAAM,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGI,IAAI,CAACC,EAAE,CAAC;YAC1C/B,GAAG,CAACgC,IAAI,CAAC,CAAC;YACVhC,GAAG,CAAC2B,SAAS,GAAG,OAAO;YACvB3B,GAAG,CAACiC,QAAQ,CAAC,GAAGX,CAAC,CAACY,QAAQ,KAAKZ,CAAC,CAACa,QAAQ,EAAE,EAAEV,MAAM,GAAG,EAAE,EAAEC,MAAM,CAAC;UACrE;QACJ,CAAC,CAAC;QAEF3B,MAAM,CAACqC,OAAO,GAAIC,CAAC,IAAK;UACpB,MAAMC,IAAI,GAAGvC,MAAM,CAACwC,qBAAqB,CAAC,CAAC;UAC3C,MAAMd,MAAM,GAAGY,CAAC,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;UACpC,MAAMf,MAAM,GAAGW,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,GAAG;UACnC,MAAMC,KAAK,GAAGrE,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACgB,MAAM,GAAG3C,YAAY,CAACgB,OAAO,CAACf,CAAC,KAAKoC,QAAQ,GAAGrC,YAAY,CAACgB,OAAO,CAACb,KAAK,CAAC;UAChH,MAAM4D,KAAK,GAAGtE,OAAO,CAACkC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACiB,MAAM,GAAG5C,YAAY,CAACgB,OAAO,CAACd,CAAC,KAAKoC,SAAS,GAAGtC,YAAY,CAACgB,OAAO,CAACZ,MAAM,CAAC,CAAC,CAAC;UACpHlB,cAAc,CAAC;YAAE8E,GAAG,EAAEF,KAAK;YAAEG,GAAG,EAAEF;UAAM,CAAC,CAAC;UAC1C7C,GAAG,CAAC2B,SAAS,GAAG,KAAK;UACrB3B,GAAG,CAAC4B,SAAS,CAAC,CAAC;UACf5B,GAAG,CAAC6B,GAAG,CAACJ,MAAM,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGI,IAAI,CAACC,EAAE,CAAC;UAC1C/B,GAAG,CAACgC,IAAI,CAAC,CAAC;QACd,CAAC;MACL,CAAC;MAEDrD,aAAa,CAACmB,OAAO,GAAG,IAAI;MAC5B,OAAO,MAAM;QACTnB,aAAa,CAACmB,OAAO,GAAG,KAAK;MACjC,CAAC;IACL;EACJ,CAAC,EAAE,CAACvB,OAAO,EAAEL,UAAU,EAAED,OAAO,EAAED,cAAc,CAAC,CAAC;;EAElD;EACAR,SAAS,CAAC,MAAM;IACZ,IAAIU,UAAU,IAAIK,OAAO,IAAIH,MAAM,CAAC0B,OAAO,IAAI,CAACzB,WAAW,CAACyB,OAAO,EAAE;MACjEH,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAErB,OAAO,CAAC;MAC7DF,WAAW,CAACyB,OAAO,GAAGnC,CAAC,CAACqF,GAAG,CAAC5E,MAAM,CAAC0B,OAAO,EAAE;QAAEmD,GAAG,EAAEtF,CAAC,CAACuF,GAAG,CAACC;MAAO,CAAC,CAAC,CAACC,SAAS,CAAC7E,OAAO,CAACkC,MAAM,CAAC;MAC5F9C,CAAC,CAAC0F,YAAY,CAAC9E,OAAO,CAAC+B,QAAQ,EAAE/B,OAAO,CAACkC,MAAM,CAAC,CAAC6C,KAAK,CAACjF,WAAW,CAACyB,OAAO,CAAC;MAE3EzB,WAAW,CAACyB,OAAO,CAACyD,EAAE,CAAC,OAAO,EAAGlB,CAAC,IAAK;QACnC,MAAM;UAAEmB,GAAG;UAAEC;QAAI,CAAC,GAAGpB,CAAC,CAACqB,MAAM,CAAC,CAAC;QAC/B1F,cAAc,CAAC;UAAE8E,GAAG,EAAEW,GAAG;UAAEV,GAAG,EAAES;QAAI,CAAC,CAAC;QACtC7F,CAAC,CAACgG,MAAM,CAAC,CAACH,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACH,KAAK,CAACjF,WAAW,CAACyB,OAAO,CAAC;MACnD,CAAC,CAAC;MAEF7B,OAAO,CAACoD,OAAO,CAACC,CAAC,IAAI;QACjB,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,OAAO,EAAE;UACxB7D,CAAC,CAACgG,MAAM,CAAC,CAACrC,CAAC,CAACE,OAAO,EAAEF,CAAC,CAACC,OAAO,CAAC,CAAC,CAC3B+B,KAAK,CAACjF,WAAW,CAACyB,OAAO,CAAC,CAC1B8D,SAAS,CAAC,GAAGtC,CAAC,CAACY,QAAQ,KAAKZ,CAAC,CAACa,QAAQ,EAAE,CAAC;QAClD;MACJ,CAAC,CAAC;IACN;IAEA,OAAO,MAAM;MACT,IAAI9D,WAAW,CAACyB,OAAO,EAAE;QACrBzB,WAAW,CAACyB,OAAO,CAAC+D,MAAM,CAAC,CAAC;QAC5BxF,WAAW,CAACyB,OAAO,GAAG,IAAI;MAC9B;IACJ,CAAC;EACL,CAAC,EAAE,CAACvB,OAAO,EAAEL,UAAU,EAAED,OAAO,EAAED,cAAc,CAAC,CAAC;EAElD,oBACIH,OAAA;IAAAiG,QAAA,GACKrF,KAAK,iBAAIZ,OAAA;MAAKkG,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAErF;IAAK;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpDlG,UAAU,gBACPL,OAAA;MAAKwG,GAAG,EAAEjG,MAAO;MAAC2F,KAAK,EAAE;QAAE7E,MAAM,EAAE,OAAO;QAAED,KAAK,EAAE,OAAO;QAAEqF,MAAM,EAAE;MAAkB;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3FvG,OAAA;MAAQwG,GAAG,EAAE/F,SAAU;MAACyF,KAAK,EAAE;QAAEO,MAAM,EAAE;MAAkB,CAAE;MAACrF,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAA+E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3F;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjG,EAAA,CA3JIL,WAAW;AAAAyG,EAAA,GAAXzG,WAAW;AA6JjB,eAAeA,WAAW;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}