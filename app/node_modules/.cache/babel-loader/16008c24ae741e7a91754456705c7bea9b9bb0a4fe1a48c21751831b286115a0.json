{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapList.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapList.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useState, useEffect } from \"react\";\nimport MapPreview from \"./MapPreview\"; // ✅ Import the new preview component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapList = () => {\n  _s();\n  const [maps, setMaps] = useState([]);\n  const [selectedMapId, setSelectedMapId] = useState(null); // ✅ Track the selected map\n\n  useEffect(() => {\n    fetchMaps();\n  }, []);\n  const fetchMaps = async () => {\n    try {\n      const response = await fetch(\"/maps/get_maps\");\n      const data = await response.json();\n      if (response.ok) {\n        // Fetch counts for each map\n        const mapsWithCounts = await Promise.all(data.map(async map => {\n          const [zoneRes, regionRes, triggerRes] = await Promise.all([fetch(`/maps/get_map_zones/${map.i_map}`), fetch(`/maps/get_map_regions/${map.i_map}`), fetch(`/maps/get_map_triggers/${map.i_map}`)]);\n          const [zoneData, regionData, triggerData] = await Promise.all([zoneRes.json(), regionRes.json(), triggerRes.json()]);\n          return {\n            ...map,\n            zone_count: zoneData.zone_count || 0,\n            region_count: regionData.region_count || 0,\n            trigger_count: triggerData.trigger_count || 0\n          };\n        }));\n        setMaps(mapsWithCounts);\n      } else {\n        throw new Error(data.detail || \"Failed to fetch maps\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching maps:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"700px\",\n      margin: \"auto\",\n      padding: \"20px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), maps.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No maps uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0\n      },\n      children: maps.map(map => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          padding: \"10px\",\n          borderBottom: \"1px solid #ddd\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: map.x_nm_map\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"14px\",\n              margin: \"5px 0\"\n            },\n            children: [\"\\uD83D\\uDDFA Zones: \", map.zone_count, \" | \\uD83D\\uDCCC Regions: \", map.region_count, \" | \\uD83D\\uDE80 Triggers: \", map.trigger_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedMapId(map.i_map),\n            style: {\n              padding: \"5px 10px\",\n              marginRight: \"5px\",\n              background: \"blue\",\n              color: \"white\",\n              border: \"none\",\n              cursor: \"pointer\"\n            },\n            children: \"\\uD83D\\uDC40 View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteMap(map.i_map),\n            style: {\n              padding: \"5px 10px\",\n              background: \"red\",\n              color: \"white\",\n              border: \"none\",\n              cursor: \"pointer\"\n            },\n            children: \"\\uD83D\\uDDD1 Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)]\n      }, map.i_map, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), selectedMapId && /*#__PURE__*/_jsxDEV(MapPreview, {\n      mapId: selectedMapId,\n      onClose: () => setSelectedMapId(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(MapList, \"0zySFbAhVd8Ih/IRtpsws3loZEg=\");\n_c = MapList;\nexport default MapList;\nvar _c;\n$RefreshReg$(_c, \"MapList\");","map":{"version":3,"names":["React","useState","useEffect","MapPreview","jsxDEV","_jsxDEV","MapList","_s","maps","setMaps","selectedMapId","setSelectedMapId","fetchMaps","response","fetch","data","json","ok","mapsWithCounts","Promise","all","map","zoneRes","regionRes","triggerRes","i_map","zoneData","regionData","triggerData","zone_count","region_count","trigger_count","Error","detail","err","console","error","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","length","listStyle","borderBottom","display","justifyContent","alignItems","x_nm_map","fontSize","onClick","marginRight","background","color","cursor","deleteMap","mapId","onClose","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapList.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapList.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useState, useEffect } from \"react\";\nimport MapPreview from \"./MapPreview\";  // ✅ Import the new preview component\n\nconst MapList = () => {\n    const [maps, setMaps] = useState([]);\n    const [selectedMapId, setSelectedMapId] = useState(null);  // ✅ Track the selected map\n\n    useEffect(() => {\n        fetchMaps();\n    }, []);\n\n    const fetchMaps = async () => {\n        try {\n            const response = await fetch(\"/maps/get_maps\");\n            const data = await response.json();\n    \n            if (response.ok) {\n                // Fetch counts for each map\n                const mapsWithCounts = await Promise.all(\n                    data.map(async (map) => {\n                        const [zoneRes, regionRes, triggerRes] = await Promise.all([\n                            fetch(`/maps/get_map_zones/${map.i_map}`),\n                            fetch(`/maps/get_map_regions/${map.i_map}`),\n                            fetch(`/maps/get_map_triggers/${map.i_map}`)\n                        ]);\n    \n                        const [zoneData, regionData, triggerData] = await Promise.all([\n                            zoneRes.json(),\n                            regionRes.json(),\n                            triggerRes.json()\n                        ]);\n    \n                        return {\n                            ...map,\n                            zone_count: zoneData.zone_count || 0,\n                            region_count: regionData.region_count || 0,\n                            trigger_count: triggerData.trigger_count || 0\n                        };\n                    })\n                );\n    \n                setMaps(mapsWithCounts);\n            } else {\n                throw new Error(data.detail || \"Failed to fetch maps\");\n            }\n        } catch (err) {\n            console.error(\"Error fetching maps:\", err);\n        }\n    };\n    \n\n    return (\n        <div style={{ maxWidth: \"700px\", margin: \"auto\", padding: \"20px\", border: \"1px solid #ddd\", borderRadius: \"8px\" }}>\n            <h2>Uploaded Maps</h2>\n            {maps.length === 0 ? <p>No maps uploaded yet.</p> : (\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {maps.map(map => (\n                        <li key={map.i_map} style={{ padding: \"10px\", borderBottom: \"1px solid #ddd\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <div>\n                                <strong>{map.x_nm_map}</strong>\n                                <p style={{ fontSize: \"14px\", margin: \"5px 0\" }}>\n                                    🗺 Zones: {map.zone_count} | 📌 Regions: {map.region_count} | 🚀 Triggers: {map.trigger_count}\n                                </p>\n                            </div>\n                            <div>\n                                <button onClick={() => setSelectedMapId(map.i_map)} style={{ padding: \"5px 10px\", marginRight: \"5px\", background: \"blue\", color: \"white\", border: \"none\", cursor: \"pointer\" }}>👀 View</button>\n                                <button onClick={() => deleteMap(map.i_map)} style={{ padding: \"5px 10px\", background: \"red\", color: \"white\", border: \"none\", cursor: \"pointer\" }}>🗑 Delete</button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n\n            {/* ✅ Show MapPreview when a map is selected */}\n            {selectedMapId && <MapPreview mapId={selectedMapId} onClose={() => setSelectedMapId(null)} />}\n        </div>\n    );\n};\n\nexport default MapList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}