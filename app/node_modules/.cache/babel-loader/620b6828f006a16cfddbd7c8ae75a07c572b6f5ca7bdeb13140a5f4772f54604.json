{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\",\n  _s = $RefreshSig$();\n///home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // Leaflet.Draw CSS\nimport \"leaflet-draw\"; // Import Leaflet.Draw\nimport \"./Map.css\"; // Canvas styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapZoneBuilder = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  zoneId,\n  onDrawComplete,\n  triggerColor,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]); // Stores drawn zone points\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const lastClickTime = useRef(0);\n\n  // ✅ Fetch Map Data from FastAPI (ZoneBuilder API)\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"✅ Map data fetched (ZoneBuilder):\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // 🖌 **Canvas Rendering Logic**\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      console.log(\"🖌 Restoring Canvas rendering...\");\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 500;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      img.onload = () => {\n        console.log(\"✅ Canvas: Map image loaded successfully\", mapData.imageUrl);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n      img.onerror = () => {\n        console.error(\"❌ Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n\n      // 🖱 **Canvas Click to Add Zone**\n      const handleMouseDown = e => {\n        if (e.button === 0) {\n          isDrawing.current = true;\n          const rect = canvas.getBoundingClientRect();\n          const scaleX = canvas.width / rect.width;\n          const scaleY = canvas.height / rect.height;\n          const x = (e.clientX - rect.left) * scaleX;\n          const y = (e.clientY - rect.top) * scaleY;\n          points.current.push({\n            x,\n            y\n          });\n          console.log(\"🖱 Click registered at:\", {\n            x,\n            y\n          });\n          drawPolygon(points.current);\n        }\n      };\n      const drawPolygon = points => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        if (points.length === 0) return;\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        points.forEach(point => ctx.lineTo(point.x, point.y));\n        ctx.closePath();\n        ctx.strokeStyle = triggerColor || \"red\";\n        ctx.stroke();\n      };\n      canvas.addEventListener(\"mousedown\", handleMouseDown);\n      return () => {\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🗺 **Leaflet Rendering Logic**\n  useEffect(() => {\n    if (mapData && mapRef.current && useLeaflet && !isInitialized.current) {\n      console.log(\"🗺 Restoring Leaflet rendering...\");\n      if (!mapInstance.current) {\n        mapInstance.current = L.map(mapRef.current, {\n          crs: L.CRS.Simple,\n          minZoom: -5,\n          maxZoom: 5,\n          zoomControl: true,\n          attributionControl: false\n        });\n      }\n\n      // Remove existing overlays to prevent duplicates\n      mapInstance.current.eachLayer(layer => {\n        if (layer instanceof L.ImageOverlay) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n      const bounds = [[mapData.bounds[0][0], mapData.bounds[0][1]],\n      // Bottom-left\n      [mapData.bounds[1][0], mapData.bounds[1][1]] // Top-right\n      ];\n      const overlay = L.imageOverlay(mapData.imageUrl, bounds).addTo(mapInstance.current);\n      mapInstance.current.fitBounds(bounds);\n      isInitialized.current = true;\n      console.log(\"✅ Leaflet Map Loaded:\", mapData.imageUrl);\n\n      // 🖱 **Leaflet Draw Tool for Adding Zones**\n      mapInstance.current.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: {\n            shapeOptions: {\n              color: triggerColor || \"red\",\n              weight: 2\n            }\n          },\n          rectangle: false,\n          circle: false,\n          polyline: false,\n          marker: false\n        }\n      });\n      mapInstance.current.addControl(drawControl);\n      mapInstance.current.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n        const coords = layer.getLatLngs()[0].map((latLng, index) => ({\n          n_x: latLng.lng,\n          n_y: latLng.lat,\n          n_z: 0,\n          n_ord: index + 1\n        }));\n        console.log(\"🖌 Scaled points (Leaflet):\", coords);\n        if (onDrawComplete) onDrawComplete(coords);\n      });\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🧹 Cleanup when switching maps\n  useEffect(() => {\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        isInitialized.current = false;\n      }\n      if (mapData && imageRef.current) {\n        imageRef.current.src = \"\"; // Clear image source to prevent memory leaks\n      }\n    };\n  }, [mapData]);\n\n  // **Return the UI**\n  if (useLeaflet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          marginBottom: \"10px\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          height: \"500px\",\n          width: \"600px\",\n          border: \"2px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          marginBottom: \"10px\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"map\",\n        style: {\n          border: \"2px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n}, \"byg4eIe6jqT7PeaoHAUHZDfv6P8=\")), \"byg4eIe6jqT7PeaoHAUHZDfv6P8=\");\n_c2 = MapZoneBuilder;\nexport default MapZoneBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapZoneBuilder$memo\");\n$RefreshReg$(_c2, \"MapZoneBuilder\");","map":{"version":3,"names":["React","useEffect","useRef","useState","memo","L","jsxDEV","_jsxDEV","MapZoneBuilder","_s","_c","zoneId","onDrawComplete","triggerColor","useLeaflet","mapRef","mapInstance","drawnItems","FeatureGroup","canvasRef","mapData","setMapData","error","setError","isInitialized","points","isDrawing","ctxRef","imageRef","lastClickTime","fetchMapData","response","fetch","ok","text","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","width","height","img","Image","crossOrigin","src","imageUrl","onload","drawImage","onerror","handleMouseDown","e","button","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","push","drawPolygon","clearRect","length","beginPath","moveTo","forEach","point","lineTo","closePath","strokeStyle","stroke","addEventListener","removeEventListener","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","attributionControl","eachLayer","layer","ImageOverlay","removeLayer","bounds","overlay","imageOverlay","addTo","fitBounds","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","shapeOptions","color","weight","rectangle","circle","polyline","marker","addControl","on","Event","CREATED","event","coords","getLatLngs","latLng","index","n_x","lng","n_y","lat","n_z","n_ord","remove","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","id","_c2","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js"],"sourcesContent":["///home/parcoadmin/parco_fastapi/app/src/components/MapZoneBuilder.js\nimport React, { useEffect, useRef, useState, memo } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Leaflet core CSS\nimport \"leaflet-draw/dist/leaflet.draw.css\"; // Leaflet.Draw CSS\nimport \"leaflet-draw\"; // Import Leaflet.Draw\nimport \"./Map.css\"; // Canvas styling\n\nconst MapZoneBuilder = memo(({ zoneId, onDrawComplete, triggerColor, useLeaflet }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const drawnItems = useRef(new L.FeatureGroup());\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const isInitialized = useRef(false);\n  const points = useRef([]); // Stores drawn zone points\n  const isDrawing = useRef(false);\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const lastClickTime = useRef(0);\n\n  // ✅ Fetch Map Data from FastAPI (ZoneBuilder API)\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`HTTP error! status: ${response.status}, response: ${text}`);\n          }\n          const data = await response.json();\n          console.log(\"✅ Map data fetched (ZoneBuilder):\", data);\n          setMapData(data);\n          setError(null);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // 🖌 **Canvas Rendering Logic**\n  useEffect(() => {\n    if (mapData && canvasRef.current && !useLeaflet && !isInitialized.current) {\n      console.log(\"🖌 Restoring Canvas rendering...\");\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctxRef.current = ctx;\n\n      canvas.width = 600;\n      canvas.height = 500;\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n\n      img.onload = () => {\n        console.log(\"✅ Canvas: Map image loaded successfully\", mapData.imageUrl);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n\n      img.onerror = () => {\n        console.error(\"❌ Failed to load map image:\", mapData.imageUrl);\n        setError(\"Failed to load map image. Please check the server response.\");\n      };\n\n      // 🖱 **Canvas Click to Add Zone**\n      const handleMouseDown = (e) => {\n        if (e.button === 0) {\n          isDrawing.current = true;\n          const rect = canvas.getBoundingClientRect();\n          const scaleX = canvas.width / rect.width;\n          const scaleY = canvas.height / rect.height;\n          const x = (e.clientX - rect.left) * scaleX;\n          const y = (e.clientY - rect.top) * scaleY;\n          \n          points.current.push({ x, y });\n          console.log(\"🖱 Click registered at:\", { x, y });\n\n          drawPolygon(points.current);\n        }\n      };\n\n      const drawPolygon = (points) => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        if (points.length === 0) return;\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        points.forEach((point) => ctx.lineTo(point.x, point.y));\n        ctx.closePath();\n        ctx.strokeStyle = triggerColor || \"red\";\n        ctx.stroke();\n      };\n\n      canvas.addEventListener(\"mousedown\", handleMouseDown);\n      return () => {\n        canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      };\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🗺 **Leaflet Rendering Logic**\n  useEffect(() => {\n    if (mapData && mapRef.current && useLeaflet && !isInitialized.current) {\n      console.log(\"🗺 Restoring Leaflet rendering...\");\n\n      if (!mapInstance.current) {\n        mapInstance.current = L.map(mapRef.current, {\n          crs: L.CRS.Simple,\n          minZoom: -5,\n          maxZoom: 5,\n          zoomControl: true,\n          attributionControl: false,\n        });\n      }\n\n      // Remove existing overlays to prevent duplicates\n      mapInstance.current.eachLayer(layer => {\n        if (layer instanceof L.ImageOverlay) {\n          mapInstance.current.removeLayer(layer);\n        }\n      });\n\n      const bounds = [\n        [mapData.bounds[0][0], mapData.bounds[0][1]], // Bottom-left\n        [mapData.bounds[1][0], mapData.bounds[1][1]]  // Top-right\n      ];\n\n      const overlay = L.imageOverlay(mapData.imageUrl, bounds).addTo(mapInstance.current);\n      mapInstance.current.fitBounds(bounds);\n      isInitialized.current = true;\n      console.log(\"✅ Leaflet Map Loaded:\", mapData.imageUrl);\n\n      // 🖱 **Leaflet Draw Tool for Adding Zones**\n      mapInstance.current.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: { featureGroup: drawnItems.current },\n        draw: {\n          polygon: { shapeOptions: { color: triggerColor || \"red\", weight: 2 } },\n          rectangle: false,\n          circle: false,\n          polyline: false,\n          marker: false,\n        },\n      });\n      mapInstance.current.addControl(drawControl);\n\n      mapInstance.current.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n        const coords = layer.getLatLngs()[0].map((latLng, index) => ({\n          n_x: latLng.lng,\n          n_y: latLng.lat,\n          n_z: 0,\n          n_ord: index + 1\n        }));\n\n        console.log(\"🖌 Scaled points (Leaflet):\", coords);\n        if (onDrawComplete) onDrawComplete(coords);\n      });\n    }\n  }, [mapData, useLeaflet]);\n\n  // 🧹 Cleanup when switching maps\n  useEffect(() => {\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n        isInitialized.current = false;\n      }\n      if (mapData && imageRef.current) {\n        imageRef.current.src = \"\"; // Clear image source to prevent memory leaks\n      }\n    };\n  }, [mapData]);\n\n  // **Return the UI**\n  if (useLeaflet) {\n    return (\n      <div>\n        {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n        <div ref={mapRef} style={{ height: \"500px\", width: \"600px\", border: \"2px solid black\" }} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {error && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{error}</div>}\n        <canvas ref={canvasRef} id=\"map\" style={{ border: \"2px solid black\" }} />\n      </div>\n    );\n  }\n});\n\nexport default MapZoneBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}