{"ast":null,"code":"var _jsxFileName = \"/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js\",\n  _s = $RefreshSig$();\n// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBuildOut = ({\n  zoneId,\n  onDrawComplete,\n  devices,\n  useLeaflet\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const canvasRef = useRef(null);\n  const [mapData, setMapData] = useState(null);\n  const [error, setError] = useState(null);\n  const [clickDots, setClickDots] = useState([]); // Track click dots for both modes\n  const ctxRef = useRef(null);\n  const imageRef = useRef(null);\n  const canvasBounds = useRef({\n    x: 0,\n    y: 0,\n    width: 600,\n    height: 400\n  });\n  const markerLayer = useRef(null); // Layer group for Leaflet markers\n\n  // Fetch map data\n  useEffect(() => {\n    if (zoneId) {\n      const fetchMapData = async () => {\n        try {\n          const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n          if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n          const data = await response.json();\n          console.log(\"✅ Fetched map data:\", data);\n          setMapData(data);\n          setError(null);\n          setClickDots([]);\n        } catch (error) {\n          console.error(\"❌ Error fetching map data:\", error);\n          setError(`Error fetching map data: ${error.message}`);\n        }\n      };\n      fetchMapData();\n    }\n  }, [zoneId]);\n\n  // Canvas rendering\n  useEffect(() => {\n    if (!useLeaflet && mapData && canvasRef.current) {\n      console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n      console.log(\"Devices:\", devices);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n      ctxRef.current = ctx;\n      canvas.width = 600;\n      canvas.height = 400;\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = mapData.imageUrl;\n      imageRef.current = img;\n      const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1];\n      const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0];\n      const drawCanvas = () => {\n        if (!ctxRef.current || !imageRef.current) return;\n        const context = ctxRef.current;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n        if (devices && Array.isArray(devices)) {\n          devices.forEach(d => {\n            if (d.n_moe_x != null && d.n_moe_y != null) {\n              const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n              const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight);\n              console.log(`Drawing device ${d.x_id_dev} at (${xPixel}, ${yPixel})`);\n              context.fillStyle = \"red\";\n              context.beginPath();\n              context.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n              context.fill();\n              context.fillStyle = \"black\";\n              context.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n            }\n          });\n        }\n        clickDots.forEach(dot => {\n          const xPixel = canvasBounds.current.x + (dot.n_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n          const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - dot.n_y) * (canvasBounds.current.height / mapHeight);\n          context.fillStyle = \"red\";\n          context.beginPath();\n          context.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n          context.fill();\n        });\n      };\n      img.onload = () => {\n        const mapAspect = mapWidth / mapHeight;\n        const canvasAspect = canvas.width / canvas.height;\n        let drawWidth = canvas.width;\n        let drawHeight = canvas.height;\n        let offsetX = 0;\n        let offsetY = 0;\n        if (mapAspect > canvasAspect) {\n          drawHeight = canvas.width / mapAspect;\n          offsetY = (canvas.height - drawHeight) / 2;\n        } else {\n          drawWidth = canvas.height * mapAspect;\n          offsetX = (canvas.width - drawWidth) / 2;\n        }\n        canvasBounds.current = {\n          x: offsetX,\n          y: offsetY,\n          width: drawWidth,\n          height: drawHeight\n        };\n        drawCanvas();\n      };\n      img.onerror = () => {\n        setError(\"Failed to load map image.\");\n      };\n      canvas.onclick = e => {\n        const rect = canvas.getBoundingClientRect();\n        const xPixel = e.clientX - rect.left;\n        const yPixel = e.clientY - rect.top;\n        const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n        const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height);\n        console.log(`Canvas click at (${xFeet}, ${yFeet})`);\n        setClickDots(prev => [...prev, {\n          n_x: xFeet,\n          n_y: yFeet\n        }]);\n        onDrawComplete({\n          n_x: xFeet,\n          n_y: yFeet\n        });\n        drawCanvas();\n      };\n      drawCanvas();\n      return () => {\n        // Cleanup not needed here\n      };\n    }\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n  // Leaflet rendering\n  useEffect(() => {\n    if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n      console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n      console.log(\"Devices:\", devices);\n      mapInstance.current = L.map(mapRef.current, {\n        crs: L.CRS.Simple,\n        dragging: true\n      }).fitBounds(mapData.bounds);\n      L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n      console.log(\"Leaflet bounds:\", mapInstance.current.getBounds());\n\n      // Layer group for markers\n      markerLayer.current = L.layerGroup().addTo(mapInstance.current);\n\n      // Custom marker icon\n      const customIcon = L.divIcon({\n        html: '<div style=\"background-color: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid black;\"></div>',\n        className: \"\",\n        iconSize: [24, 24],\n        iconAnchor: [12, 12],\n        popupAnchor: [0, -12]\n      });\n      mapInstance.current.on(\"click\", e => {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        console.log(`Leaflet click at (${lng}, ${lat})`);\n        setClickDots(prev => [...prev, {\n          n_x: lng,\n          n_y: lat\n        }]);\n        onDrawComplete({\n          n_x: lng,\n          n_y: lat\n        });\n        L.marker([lat, lng], {\n          icon: customIcon\n        }).addTo(markerLayer.current).bindPopup(\"Clicked Marker\").openPopup();\n      });\n\n      // Draw devices\n      if (devices && Array.isArray(devices)) {\n        devices.forEach(d => {\n          if (d.n_moe_x != null && d.n_moe_y != null) {\n            console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n            L.marker([d.n_moe_y, d.n_moe_x], {\n              icon: customIcon\n            }).addTo(markerLayer.current).bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`).openPopup();\n          }\n        });\n      }\n\n      // Draw initial click dots\n      clickDots.forEach(dot => {\n        L.marker([dot.n_y, dot.n_x], {\n          icon: customIcon\n        }).addTo(markerLayer.current).bindPopup(\"Clicked Marker\").openPopup();\n      });\n    }\n  }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n  // Redraw Leaflet markers when clickDots change\n  useEffect(() => {\n    if (useLeaflet && mapInstance.current && markerLayer.current) {\n      markerLayer.current.clearLayers();\n      const customIcon = L.divIcon({\n        html: '<div style=\"background-color: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid black;\"></div>',\n        className: \"\",\n        iconSize: [24, 24],\n        iconAnchor: [12, 12],\n        popupAnchor: [0, -12]\n      });\n      if (devices && Array.isArray(devices)) {\n        devices.forEach(d => {\n          if (d.n_moe_x != null && d.n_moe_y != null) {\n            console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n            L.marker([d.n_moe_y, d.n_moe_x], {\n              icon: customIcon\n            }).addTo(markerLayer.current).bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`).openPopup();\n          }\n        });\n      }\n      clickDots.forEach(dot => {\n        console.log(`Adding click marker at (${dot.n_x}, ${dot.n_y})`);\n        L.marker([dot.n_y, dot.n_x], {\n          icon: customIcon\n        }).addTo(markerLayer.current).bindPopup(\"Clicked Marker\").openPopup();\n      });\n    }\n  }, [clickDots, devices, useLeaflet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 23\n    }, this), useLeaflet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: \"400px\",\n        width: \"600px\",\n        border: \"2px solid black\",\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: \"2px solid black\",\n        cursor: \"pointer\"\n      },\n      width: \"600\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(MapBuildOut, \"bQvO36rvtxRXtljhrITHZ2xjKcw=\");\n_c = MapBuildOut;\nexport default MapBuildOut;\nvar _c;\n$RefreshReg$(_c, \"MapBuildOut\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapBuildOut","zoneId","onDrawComplete","devices","useLeaflet","_s","mapRef","mapInstance","canvasRef","mapData","setMapData","error","setError","clickDots","setClickDots","ctxRef","imageRef","canvasBounds","x","y","width","height","markerLayer","fetchMapData","response","fetch","ok","Error","status","data","json","console","log","message","current","canvas","ctx","getContext","img","Image","crossOrigin","src","imageUrl","mapWidth","bounds","mapHeight","drawCanvas","context","clearRect","drawImage","Array","isArray","forEach","d","n_moe_x","n_moe_y","xPixel","yPixel","x_id_dev","fillStyle","beginPath","arc","Math","PI","fill","fillText","x_nm_dev","dot","n_x","n_y","onload","mapAspect","canvasAspect","drawWidth","drawHeight","offsetX","offsetY","onerror","onclick","e","rect","getBoundingClientRect","clientX","left","clientY","top","xFeet","yFeet","prev","map","crs","CRS","Simple","dragging","fitBounds","imageOverlay","addTo","getBounds","layerGroup","customIcon","divIcon","html","className","iconSize","iconAnchor","popupAnchor","on","lat","lng","latlng","marker","icon","bindPopup","openPopup","clearLayers","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","cursor","_c","$RefreshReg$"],"sources":["/home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js"],"sourcesContent":["// # VERSION 250316 /home/parcoadmin/parco_fastapi/app/src/components/MapBuildOut.js 0P.10B.01\n// #  \n// # ParcoRTLS Middletier Services, ParcoRTLS DLL, ParcoDatabases, ParcoMessaging, and other code\n// # Copyright (C) 1999 - 2025 Affiliated Commercial Services Inc.\n// # Invented by Scott Cohen & Bertrand Dugal.\n// # Coded by Jesse Chunn O.B.M.'24 and Michael Farnsworth and Others\n// # Published at GitHub https://github.com/scocoh/IPS-RTLS-UWB\n// #\n// # Licensed under AGPL-3.0: https://www.gnu.org/licenses/agpl-3.0.en.html\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapBuildOut = ({ zoneId, onDrawComplete, devices, useLeaflet }) => {\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n    const canvasRef = useRef(null);\n    const [mapData, setMapData] = useState(null);\n    const [error, setError] = useState(null);\n    const [clickDots, setClickDots] = useState([]); // Track click dots for both modes\n    const ctxRef = useRef(null);\n    const imageRef = useRef(null);\n    const canvasBounds = useRef({ x: 0, y: 0, width: 600, height: 400 });\n    const markerLayer = useRef(null); // Layer group for Leaflet markers\n\n    // Fetch map data\n    useEffect(() => {\n        if (zoneId) {\n            const fetchMapData = async () => {\n                try {\n                    const response = await fetch(`/zonebuilder/get_map_data/${zoneId}`);\n                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n                    const data = await response.json();\n                    console.log(\"✅ Fetched map data:\", data);\n                    setMapData(data);\n                    setError(null);\n                    setClickDots([]);\n                } catch (error) {\n                    console.error(\"❌ Error fetching map data:\", error);\n                    setError(`Error fetching map data: ${error.message}`);\n                }\n            };\n            fetchMapData();\n        }\n    }, [zoneId]);\n\n    // Canvas rendering\n    useEffect(() => {\n        if (!useLeaflet && mapData && canvasRef.current) {\n            console.log(\"🖌 Initializing Canvas rendering with mapData:\", mapData);\n            console.log(\"Devices:\", devices);\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctxRef.current = ctx;\n\n            canvas.width = 600;\n            canvas.height = 400;\n\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.src = mapData.imageUrl;\n            imageRef.current = img;\n\n            const mapWidth = mapData.bounds[1][1] - mapData.bounds[0][1];\n            const mapHeight = mapData.bounds[1][0] - mapData.bounds[0][0];\n\n            const drawCanvas = () => {\n                if (!ctxRef.current || !imageRef.current) return;\n                const context = ctxRef.current;\n                context.clearRect(0, 0, canvas.width, canvas.height);\n                context.drawImage(imageRef.current, canvasBounds.current.x, canvasBounds.current.y, canvasBounds.current.width, canvasBounds.current.height);\n\n                if (devices && Array.isArray(devices)) {\n                    devices.forEach(d => {\n                        if (d.n_moe_x != null && d.n_moe_y != null) {\n                            const xPixel = canvasBounds.current.x + (d.n_moe_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n                            const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - d.n_moe_y) * (canvasBounds.current.height / mapHeight);\n                            console.log(`Drawing device ${d.x_id_dev} at (${xPixel}, ${yPixel})`);\n                            context.fillStyle = \"red\";\n                            context.beginPath();\n                            context.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                            context.fill();\n                            context.fillStyle = \"black\";\n                            context.fillText(`${d.x_id_dev}: ${d.x_nm_dev}`, xPixel + 10, yPixel);\n                        }\n                    });\n                }\n\n                clickDots.forEach(dot => {\n                    const xPixel = canvasBounds.current.x + (dot.n_x - mapData.bounds[0][1]) * (canvasBounds.current.width / mapWidth);\n                    const yPixel = canvasBounds.current.y + (mapData.bounds[1][0] - dot.n_y) * (canvasBounds.current.height / mapHeight);\n                    context.fillStyle = \"red\";\n                    context.beginPath();\n                    context.arc(xPixel, yPixel, 5, 0, 2 * Math.PI);\n                    context.fill();\n                });\n            };\n\n            img.onload = () => {\n                const mapAspect = mapWidth / mapHeight;\n                const canvasAspect = canvas.width / canvas.height;\n                let drawWidth = canvas.width;\n                let drawHeight = canvas.height;\n                let offsetX = 0;\n                let offsetY = 0;\n\n                if (mapAspect > canvasAspect) {\n                    drawHeight = canvas.width / mapAspect;\n                    offsetY = (canvas.height - drawHeight) / 2;\n                } else {\n                    drawWidth = canvas.height * mapAspect;\n                    offsetX = (canvas.width - drawWidth) / 2;\n                }\n\n                canvasBounds.current = { x: offsetX, y: offsetY, width: drawWidth, height: drawHeight };\n                drawCanvas();\n            };\n\n            img.onerror = () => {\n                setError(\"Failed to load map image.\");\n            };\n\n            canvas.onclick = (e) => {\n                const rect = canvas.getBoundingClientRect();\n                const xPixel = e.clientX - rect.left;\n                const yPixel = e.clientY - rect.top;\n                const xFeet = mapData.bounds[0][1] + (xPixel - canvasBounds.current.x) * (mapWidth / canvasBounds.current.width);\n                const yFeet = mapData.bounds[1][0] - (yPixel - canvasBounds.current.y) * (mapHeight / canvasBounds.current.height);\n                console.log(`Canvas click at (${xFeet}, ${yFeet})`);\n                setClickDots(prev => [...prev, { n_x: xFeet, n_y: yFeet }]);\n                onDrawComplete({ n_x: xFeet, n_y: yFeet });\n                drawCanvas();\n            };\n\n            drawCanvas();\n            return () => {\n                // Cleanup not needed here\n            };\n        }\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    // Leaflet rendering\n    useEffect(() => {\n        if (useLeaflet && mapData && mapRef.current && !mapInstance.current) {\n            console.log(\"🗺 Initializing Leaflet with mapData:\", mapData);\n            console.log(\"Devices:\", devices);\n            mapInstance.current = L.map(mapRef.current, { \n                crs: L.CRS.Simple, \n                dragging: true \n            }).fitBounds(mapData.bounds);\n            L.imageOverlay(mapData.imageUrl, mapData.bounds).addTo(mapInstance.current);\n            console.log(\"Leaflet bounds:\", mapInstance.current.getBounds());\n\n            // Layer group for markers\n            markerLayer.current = L.layerGroup().addTo(mapInstance.current);\n\n            // Custom marker icon\n            const customIcon = L.divIcon({\n                html: '<div style=\"background-color: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid black;\"></div>',\n                className: \"\",\n                iconSize: [24, 24],\n                iconAnchor: [12, 12],\n                popupAnchor: [0, -12]\n            });\n\n            mapInstance.current.on(\"click\", (e) => {\n                const { lat, lng } = e.latlng;\n                console.log(`Leaflet click at (${lng}, ${lat})`);\n                setClickDots(prev => [...prev, { n_x: lng, n_y: lat }]);\n                onDrawComplete({ n_x: lng, n_y: lat });\n                L.marker([lat, lng], { icon: customIcon })\n                    .addTo(markerLayer.current)\n                    .bindPopup(\"Clicked Marker\")\n                    .openPopup();\n            });\n\n            // Draw devices\n            if (devices && Array.isArray(devices)) {\n                devices.forEach(d => {\n                    if (d.n_moe_x != null && d.n_moe_y != null) {\n                        console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n                        L.marker([d.n_moe_y, d.n_moe_x], { icon: customIcon })\n                            .addTo(markerLayer.current)\n                            .bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`)\n                            .openPopup();\n                    }\n                });\n            }\n\n            // Draw initial click dots\n            clickDots.forEach(dot => {\n                L.marker([dot.n_y, dot.n_x], { icon: customIcon })\n                    .addTo(markerLayer.current)\n                    .bindPopup(\"Clicked Marker\")\n                    .openPopup();\n            });\n        }\n    }, [mapData, useLeaflet, devices, onDrawComplete]);\n\n    // Redraw Leaflet markers when clickDots change\n    useEffect(() => {\n        if (useLeaflet && mapInstance.current && markerLayer.current) {\n            markerLayer.current.clearLayers();\n\n            const customIcon = L.divIcon({\n                html: '<div style=\"background-color: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid black;\"></div>',\n                className: \"\",\n                iconSize: [24, 24],\n                iconAnchor: [12, 12],\n                popupAnchor: [0, -12]\n            });\n\n            if (devices && Array.isArray(devices)) {\n                devices.forEach(d => {\n                    if (d.n_moe_x != null && d.n_moe_y != null) {\n                        console.log(`Adding marker for ${d.x_id_dev} at (${d.n_moe_y}, ${d.n_moe_x})`);\n                        L.marker([d.n_moe_y, d.n_moe_x], { icon: customIcon })\n                            .addTo(markerLayer.current)\n                            .bindPopup(`${d.x_id_dev}: ${d.x_nm_dev}`)\n                            .openPopup();\n                    }\n                });\n            }\n\n            clickDots.forEach(dot => {\n                console.log(`Adding click marker at (${dot.n_x}, ${dot.n_y})`);\n                L.marker([dot.n_y, dot.n_x], { icon: customIcon })\n                    .addTo(markerLayer.current)\n                    .bindPopup(\"Clicked Marker\")\n                    .openPopup();\n            });\n        }\n    }, [clickDots, devices, useLeaflet]);\n\n    return (\n        <div>\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\n            {useLeaflet ? (\n                <div ref={mapRef} style={{ height: \"400px\", width: \"600px\", border: \"2px solid black\", cursor: \"pointer\" }} />\n            ) : (\n                <canvas ref={canvasRef} style={{ border: \"2px solid black\", cursor: \"pointer\" }} width=\"600\" height=\"400\" />\n            )}\n        </div>\n    );\n};\n\nexport default MapBuildOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}